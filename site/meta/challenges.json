{
  "challenges": [
    {
      "path": "1-hello-word",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuY29uc3QgbXNnID0gcmVmKFwiSGVsbG8gV29ybGRcIilcbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDxkaXY+XG4gICAgPGgxPm1zZzwvaDE+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cbiJ9",
      "no": 1,
      "readme": {
        "en": "Hello, World!\n\nIn Vue.js Challenges, we use the Vue.js SFC Playground based on [vuejs/repl](https://github.com/vuejs/repl) to coding online.\n\nFor this challenge, you will need to change the following code to make the page show \"Hello World\" correctly.\n\n```vue\n<script setup>\nimport { ref } from \"vue\"\nconst msg = ref(\"Hello World\")\n</script>\n\n<template>\n  <div>\n    <!-- The output of the page expected to be Hello World -->\n    <h1>msg</h1>\n  </div>\n</template>\n\n```\n\nClick the `Take the Challenge` button to start coding! Happy Hacking!",
        "zh-CN": "Hello，World！\n\n在这个挑战中，我们使用基于 [vuejs/repl](https://github.com/vuejs/repl) 的`SFC`编码游乐场进行在线编码。\n\n对于这个挑战，您将需要更改以下代码，以使页面正确显示“Hello World”。\n\n```vue\n<script setup>\nimport { ref } from \"vue\"\nconst msg = ref(\"Hello World\")\n</script>\n\n<template>\n  <div>\n    <!-- 页面的期望输出是Hello World -->\n    <h1>msg</h1>\n  </div>\n</template>\n\n```\n\n\n点击上方的 `接受挑战` 开始编码！旅途愉快！"
      },
      "info": {
        "en": {
          "title": "Hello World",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "warm"
        },
        "zh-CN": {
          "title": "你好 !",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "10-lifecycle",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgcHJvdmlkZSB9IGZyb20gXCJ2dWVcIlxuaW1wb3J0IENoaWxkIGZyb20gXCIuL0NoaWxkLnZ1ZVwiXG5cbmNvbnN0IHZpc2libGUgPSByZWYodHJ1ZSlcbmNvbnN0IHRpbWVyID0gcmVmKG51bGwpXG5jb25zdCBjb3VudCA9IHJlZigwKVxucHJvdmlkZShcInRpbWVyXCIsIHRpbWVyKVxucHJvdmlkZShcImNvdW50XCIsIGNvdW50KVxuXG5mdW5jdGlvbiB0b2dnbGUoKSB7XG4gIHZpc2libGUudmFsdWUgPSAhdmlzaWJsZS52YWx1ZVxufVxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8Q2hpbGQgdi1pZj1cInZpc2libGVcIiAvPlxuICAgIDxwPlxuICAgICAgPGJ1dHRvbiBAY2xpY2s9XCJ0b2dnbGVcIj5cbiAgICAgICAgVG9nZ2xlIENoaWxkIENvbXBvbmVudFxuICAgICAgPC9idXR0b24+XG4gICAgPC9wPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG4iLCJDaGlsZC52dWUiOiI8c2NyaXB0IHNldHVwIGxhbmc9XCJ0c1wiPlxuaW1wb3J0IHsgb25Nb3VudGVkLCBpbmplY3QgfSBmcm9tIFwidnVlXCJcblxuY29uc3QgdGltZXIgPSBpbmplY3QoXCJ0aW1lclwiKVxuY29uc3QgY291bnQgPSBpbmplY3QoXCJjb3VudFwiKVxuXG5vbk1vdW50ZWQoKCkgPT4ge1xuICB0aW1lci52YWx1ZSA9IHdpbmRvdy5zZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgY291bnQudmFsdWUrK1xuICB9LCAxMDAwKVxufSlcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8cD5cbiAgICAgIENoaWxkIENvbXBvbmVudDoge3sgY291bnQgfX1cbiAgICA8L3A+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cbiJ9",
      "no": 10,
      "readme": {
        "en": "For this challenge, you'll use `Composition API: Lifecycle Hooks` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n// Child.vue\n\n<script setup lang=\"ts\">\nimport { onMounted, inject } from \"vue\"\n\nconst timer = inject('timer')\nconst count = inject('count')\n\n\nonMounted(() => {\n  // The timer'll work unnormally while toggle child component,Let's go to fixed it.\n  timer.value = window.setInterval(() => {\n    count.value++\n  }, 1000)\n})\n\n</script>\n\n<template>\n  <div>\n    <p>\n      Child Component: {{ count }}\n    </p>\n  </div>\n</template>\n\n```",
        "zh-CN": "在这个挑战中，你将使用 `组合式 API: 生命周期钩子` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n// Child.vue\n\n<script setup lang=\"ts\">\nimport { onMounted, inject } from \"vue\"\n\nconst timer = inject('timer')\nconst count = inject('count')\n\n\nonMounted(() => {\n  // 切换子组件时, 定时器将不正常工作, 让我们来修复它 . \n  timer.value = window.setInterval(() => {\n    count.value++\n  }, 1000)\n})\n\n</script>\n\n<template>\n  <div>\n    <p>\n      Child Component: {{ count }}\n    </p>\n  </div>\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "Lifecycle Hooks",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "easy",
          "tags": "Composition API,Lifecycle"
        },
        "zh-CN": {
          "title": "生命周期钩子",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "11-next-dom-update",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG5jb25zdCBjb3VudCA9IHJlZigwKVxuXG5mdW5jdGlvbiBpbmNyZW1lbnQoKSB7XG4gIGNvdW50LnZhbHVlKytcblxuICAvKipcbiAgICogRE9NIG5vdCB5ZXQgdXBkYXRlZCwgaG93IHRvIG1ha2Ugc3VyZSB0aGUgRE9NIHVkcGF0ZWRcbiAgICogTWFrZSB0aGUgb3V0cHV0IHRvIGJlIHRydWVcbiAgKi9cblxuICBjb25zb2xlLmxvZygrZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb3VudGVyXCIpLnRleHRDb250ZW50ID09PSAxKVxufVxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGJ1dHRvbiBpZD1cImNvdW50ZXJcIiBAY2xpY2s9XCJpbmNyZW1lbnRcIj5cbiAgICB7eyBjb3VudCB9fVxuICA8L2J1dHRvbj5cbjwvdGVtcGxhdGU+XG4ifQ==",
      "no": 11,
      "readme": {
        "en": "When you mutate reactive state in `Vue.js`, the resulting DOM updates are not applied synchronously. \n\n`Vue.js` provides a utility for waiting for the next DOM update flush, Let's Go 👇: \n\n```vue\n<script setup>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\nfunction increment() {\n  count.value++\n\n  /**\n   * DOM not yet updated, how to make sure the DOM udpated\n   * Make the output to be true\n  */\n\n  console.log(+document.getElementById(\"counter\").textContent === 1)\n}\n</script>\n\n<template>\n  <button id=\"counter\" @click=\"increment\">\n    {{ count }}\n  </button>\n</template>\n\n\n```",
        "zh-CN": "在`Vue.js`中改变响应式状态时，DOM不会同步更新。 \n`Vue.js` 提供了一个用于等待下一次DOM更新的方法，让我们开始吧 👇: \n\n```vue\n<script setup>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\nfunction increment() {\n  count.value++\n\n  /**\n   * DOM还未更新,如何确保DOM已经更新 ?\n   * 请保证以下输出为true\n  */\n\n  console.log(+document.getElementById(\"counter\").textContent === 1)\n}\n</script>\n\n<template>\n  <button id=\"counter\" @click=\"increment\">\n    {{ count }}\n  </button>\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "Next DOM update flush",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "easy",
          "tags": "Global API:General"
        },
        "zh-CN": {
          "title": "下一次DOM更新",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "12-optimize-perf-directive",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG5jb25zdCBjb3VudCA9IHJlZigwKVxuXG5zZXRJbnRlcnZhbCgoKSA9PiB7XG4gIGNvdW50LnZhbHVlKytcbn0sIDEwMDApXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8c3Bhbj5NYWtlIGl0IG5ldmVyIGNoYW5nZToge3sgY291bnQgfX08L3NwYW4+XG48L3RlbXBsYXRlPlxuIn0=",
      "no": 12,
      "readme": {
        "en": "`Vue.js` provides a directive so that render the element and component once only, and skip future updates.\n\nDo you know what's it, Let's try it 👇: \n\n```vue\n<script setup>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\nsetInterval(() => {\n  count.value++\n}, 1000)\n</script>\n\n<template>\n  <span>Make it never change: {{ count }}</span>\n</template>\n\n```",
        "zh-CN": "`Vue.js` 提供了一个指令，以便只渲染一次元素和组件，并且跳过以后的更新。\n\n你知道它是什么吗 ? 让我们试试👇:\n\n```vue\n<script setup>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\nsetInterval(() => {\n  count.value++\n}, 1000)\n</script>\n\n<template>\n  <span>使它从不更新: {{ count }}</span>\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "Optimize performance directive",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "Directives,Built-ins"
        },
        "zh-CN": {
          "title": "优化性能的指令",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "13-dom-portal",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cblxuY29uc3QgbXNnID0gXCJIZWxsbyBXb3JsZFwiXG5cbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDwhLS0gUmVuZGVycyBpdHMgdG8gYSBjaGlsZCBlbGVtZW50IG9mIHRoZSBgYm9keWAgLS0+XG4gIDxzcGFuPnt7IG1zZyB9fTwvc3Bhbj5cbjwvdGVtcGxhdGU+XG4ifQ==",
      "no": 13,
      "readme": {
        "en": "`Vue.js` provides a built-in component that renders its slot content to another part of the `DOM`. \n\nDo you know what's it, Let's try it 👇: \n\n```vue\n<script setup>\n\nconst msg = \"Hello World\"\n\n</script>\n\n<template>\n  <!-- Renders its to a child element of the `body` -->\n  <span>{{ msg }}</span>\n</template>\n\n\n```",
        "zh-CN": "`Vue.js`提供了一个内置组件，将其插槽内容渲染到另一个DOM，成为该DOM的一部分。\n\n你知道它是什么吗 ? 让我们试试👇:\n\n```vue\n<script setup>\n\nconst msg = \"Hello World\"\n\n</script>\n\n<template>\n  <!-- 将以下元素渲染成`body`的子元素 -->\n  <span>{{ msg }}</span>\n</template>\n\n\n```"
      },
      "info": {
        "en": {
          "title": "DOM Portal",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "easy",
          "tags": "Components,Built-ins"
        },
        "zh-CN": {
          "title": "DOM传送门",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "14-dynamic-css-values",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuY29uc3QgdGhlbWUgPSByZWYoXCJyZWRcIilcblxuY29uc3QgY29sb3JzID0gW1wiYmx1ZVwiLCBcInllbGxvd1wiLCBcInJlZFwiLCBcImdyZWVuXCJdXG5cbnNldEludGVydmFsKCgpID0+IHtcbiAgdGhlbWUudmFsdWUgPSBjb2xvcnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNCldXG59LCAxMDAwKVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8cD5oZWxsbzwvcD5cbjwvdGVtcGxhdGU+XG5cbjxzdHlsZSBzY29wZWQ+XG4vKiBNb2RpZnkgdGhlIGNvZGUgdG8gYmluZCB0aGUgZHluYW1pYyBjb2xvciAqL1xucCB7XG4gIGNvbG9yOiByZWRcbn1cbjwvc3R5bGU+XG4ifQ==",
      "no": 14,
      "readme": {
        "en": "SFC `<style>` tags support linking CSS values to dynamic component.\n\nDo you know what's it, Let's try it 👇: \n\n```vue\n<script setup>\nimport { ref } from \"vue\"\nconst theme = ref(\"red\")\n\nconst colors = [\"blue\", \"yellow\", \"red\", \"green\"]\n\nsetInterval(() => {\n  theme.value = colors[Math.floor(Math.random() * 4)]\n}, 1000)\n\n</script>\n\n<template>\n  <p>hello</p>\n</template>\n\n<style scoped>\n/* Modify the code to bind the dynamic color */\np {\n  color: red\n}\n</style>\n\n```",
        "zh-CN": "`Vue`单文件组件 `<style>` 模块支持给CSS绑定动态值。\n\n你知道它是什么吗 ? 让我们试试👇:\n\n```vue\n<script setup>\nimport { ref } from \"vue\"\nconst theme = ref(\"red\")\n\nconst colors = [\"blue\", \"yellow\", \"red\", \"green\"]\n\nsetInterval(() => {\n  theme.value = colors[Math.floor(Math.random() * 4)]\n}, 1000)\n\n</script>\n\n<template>\n  <p>hello</p>\n</template>\n\n<style scoped>\n/* 修改以下代码绑定动态颜色 */\np {\n  color: red\n}\n</style>\n\n```"
      },
      "info": {
        "en": {
          "title": "Dynamic css values",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "easy",
          "tags": "CSS Features"
        },
        "zh-CN": {
          "title": "动态CSS",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "15-useToggle",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbi8qKlxuICogSW1wbGVtZW50IGEgY29tcG9zYWJsZSBmdW5jdGlvbiB0aGF0IHRvZ2dsZSBzdGF0ZVxuICogTWFrZSB0aGUgZnVuY3Rpb24gd29yayBmaW5lXG4qL1xuZnVuY3Rpb24gdXNlVG9nZ2xlKCkge1xuXG59XG5cbmNvbnN0IFtzdGF0ZSwgdG9nZ2xlXSA9IHVzZVRvZ2dsZShmYWxzZSlcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPHA+U3RhdGU6IHt7IHN0YXRlID8gJ09OJyA6ICdPRkYnIH19PC9wPlxuICA8cCBAY2xpY2s9XCJ0b2dnbGVcIj5cbiAgICBUb2dnbGUgc3RhdGVcbiAgPC9wPlxuPC90ZW1wbGF0ZT5cbiJ9",
      "no": 15,
      "readme": {
        "en": "For this challenge, we'll start write composable function. Let's start with `useToggle` 👇: \n\n\n```vue\n<script setup lang='ts'>\n\n/**\n * Implement a composable function that toggle state\n * Make the function work fine\n*/\nfunction useToggle() {\n\n}\n\nconst [state, toggle] = useToggle(false)\n\n</script>\n\n<template>\n  <p>State: {{ state ? 'ON' : 'OFF' }}</p>\n  <p @click=\"toggle\">\n    Toggle state\n  </p>\n</template>\n\n```",
        "zh-CN": "这个挑战开始,我们将尝试编写可组合函数，让我们从`useToggle`开始 👇:\n\n```vue\n<script setup lang='ts'>\n\n/**\n * 实现一个切换状态的可组合函数\n * 确保该功能正常工作\n*/\nfunction useToggle() {\n\n}\n\nconst [state, toggle] = useToggle(false)\n\n</script>\n\n<template>\n  <p>State: {{ state ? 'ON' : 'OFF' }}</p>\n  <p @click=\"toggle\">\n    Toggle state\n  </p>\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "useToggle",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "Composable Function"
        },
        "zh-CN": {
          "title": "切换器",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "16-until",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5pbXBvcnQgeyByZWYgfSBmcm9tIFwidnVlXCJcblxuY29uc3QgY291bnQgPSByZWYoMClcblxuLyoqXG4gKiBJbXBsZW1lbnQgdGhlIHVudGlsIGZ1bmN0aW9uXG4qL1xuXG5mdW5jdGlvbiB1bnRpbChpbml0aWFsKSB7XG4gIGZ1bmN0aW9uIHRvQmUodmFsdWUpIHtcblxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0b0JlLFxuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGluY3JlYXNlKCkge1xuICBjb3VudC52YWx1ZSA9IDBcbiAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgIGNvdW50LnZhbHVlKytcbiAgfSwgMTAwMClcbiAgYXdhaXQgdW50aWwoY291bnQpLnRvQmUoMylcbiAgY29uc29sZS5sb2coY291bnQudmFsdWUgPT09IDMpIC8vIE1ha2Ugc3VyZSB0aGUgb3V0cHV0IHRvIGJlIHRydWVcbn1cblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPHAgQGNsaWNrPVwiaW5jcmVhc2VcIj5cbiAgICBJbmNyZWFzZVxuICA8L3A+XG48L3RlbXBsYXRlPlxuIn0=",
      "no": 16,
      "readme": {
        "en": "We always need to rely on the asynchronous return result to do something, and the `until` function is so useful in this case, Can you do it? Let's try it 👇:\n\n\n```vue\n<script setup lang='ts'>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\n/**\n * Implement the until function\n*/\n\nfunction until(initial) {\n  function toBe(value) {\n\n  }\n\n  return {\n    toBe,\n  }\n}\n\nasync function increase() {\n  count.value = 0\n  setInterval(() => {\n    count.value++\n  }, 1000)\n  await until(count).toBe(3)\n  console.log(count.value === 3) // Make sure the output to be true\n}\n\n</script>\n\n```",
        "zh-CN": "有些时候，我们需要依赖于异步的返回结果做一些后续处理，`until`函数在这种场景下非常有用，你能实现它吗 ? 让我们来试试吧 👇:\n\n\n```vue\n<script setup lang='ts'>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\n/**\n * 实现`until`函数\n*/\n\nfunction until(initial) {\n  function toBe(value) {\n\n  }\n\n  return {\n    toBe,\n  }\n}\n\nasync function increase() {\n  count.value = 0\n  setInterval(() => {\n    count.value++\n  }, 1000)\n  await until(count).toBe(3)\n  console.log(count.value === 3) // 确保输出为true\n}\n\n</script>\n\n```"
      },
      "info": {
        "en": {
          "title": "until",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "Utility Function"
        },
        "zh-CN": {
          "title": "until",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "17-useCounter",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmludGVyZmFjZSBVc2VDb3VudGVyT3B0aW9ucyB7XG4gIG1pbj86IG51bWJlclxuICBtYXg/OiBudW1iZXJcbn1cblxuLyoqXG4gKiBJbXBsZW1lbnQgdGhlIGNvbXBvc2FibGUgZnVuY3Rpb25cbiAqIE1ha2UgdGhlIGZ1bmN0aW9uIHdvcmsgZmluZVxuKi9cbmZ1bmN0aW9uIHVzZUNvdW50ZXIoaW5pdGlhbFZhbHVlID0gMCwgb3B0aW9uczogVXNlQ291bnRlck9wdGlvbnMgPSB7fSkge1xuXG59XG5cbmNvbnN0IHsgY291bnQsIGluYywgZGVjLCByZXNldCB9ID0gdXNlQ291bnRlcigwLCB7IG1pbjogMCwgbWF4OiAxMCB9KVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8cD5Db3VudDoge3sgY291bnQgfX08L3A+XG4gIDxidXR0b24gQGNsaWNrPVwiaW5jXCI+XG4gICAgaW5jXG4gIDwvYnV0dG9uPlxuICA8YnV0dG9uIEBjbGljaz1cImRlY1wiPlxuICAgIGRlY1xuICA8L2J1dHRvbj5cbiAgPGJ1dHRvbiBAY2xpY2s9XCJyZXNldFwiPlxuICAgIHJlc2V0XG4gIDwvYnV0dG9uPlxuPC90ZW1wbGF0ZT5cbiJ9",
      "no": 17,
      "readme": {
        "en": "For this challenge, we're going to implement a counter. 👇: \n\n\n```vue\n<script setup lang='ts'>\n\ninterface UseCounterOptions {\n  min?: number\n  max?: number\n}\n\n/**\n * Implement the composable function\n * 1. inc (+)\n * 2. dec (-)\n * 3. reset \n * 4. min & max opotion support\n * Make the function work fine\n*/\nfunction useCounter(initialValue = 0, options: UseCounterOptions = {}) {\n\n}\n\nconst { count, inc, dec, reset } = useCounter(0, { min: 0, max: 10 })\n\n</script>\n\n```",
        "zh-CN": "在这个挑战中，我们将实现一个计数器。 👇: \n\n\n```vue\n<script setup lang='ts'>\n\ninterface UseCounterOptions {\n  min?: number\n  max?: number\n}\n\n/**\n * 实现计数器函数,确保功能正常工作\n * 1. 加 (+)\n * 2. 减 (-)\n * 3. 重置 \n * 4. 最小值 & 最大值 选项支持\n*/\nfunction useCounter(initialValue = 0, options: UseCounterOptions = {}) {\n\n}\n\nconst { count, inc, dec, reset } = useCounter(0, { min: 0, max: 10 })\n\n</script>\n\n```"
      },
      "info": {
        "en": {
          "title": "useCounter",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "Composable Function"
        },
        "zh-CN": {
          "title": "计数器",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "18-useLocalStorage",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG4vKipcbiAqIEltcGxlbWVudCB0aGUgY29tcG9zYWJsZSBmdW5jdGlvblxuICogTWFrZSB0aGUgZnVuY3Rpb24gd29yayBmaW5lXG4qL1xuZnVuY3Rpb24gdXNlTG9jYWxTdG9yYWdlKGtleTogc3RyaW5nLCBpbml0aWFsVmFsdWU6IGFueSkge1xuICBjb25zdCB2YWx1ZSA9IHJlZihpbml0aWFsVmFsdWUpXG5cbiAgcmV0dXJuIHZhbHVlXG59XG5cbmNvbnN0IGNvdW50ZXIgPSB1c2VMb2NhbFN0b3JhZ2UoXCJjb3VudGVyXCIsIDApXG5cbi8vIFdlIGNhbiBnZXQgbG9jYWxTdG9yYWdlIHZpYSB0cmlnZ2VyZWQgdGhlIGdldHRlcjpcbmNvbnNvbGUubG9nKGNvdW50ZXIudmFsdWUpXG5cbi8vIEFuZCBXZSBhbHNvIGNhbiBzZXQgbG9jYWxTdG9yYWdlIHZpYSB0cmlnZ2VyZWQgdGhlIHNldHRlcjpcblxuY291bnRlci52YWx1ZSA9IDFcblxuPC9zY3JpcHQ+XG4ifQ==",
      "no": 18,
      "readme": {
        "en": "We often need to use the `localStorage` API, A composable function will help us better use it, Let's go. 👇: \n\n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * Implement the composable function\n * Make the function work fine\n*/\nfunction useLocalStorage(key: string, initialValue: any) {\n  const value = ref(initialValue)\n\n  return value\n}\n\nconst counter = useLocalStorage(\"counter\", 0)\n\n// We can get localStorage via triggered the getter:\nconsole.log(counter.value)\n\n// And We also can set localStorage via triggered the setter:\n\ncounter.value = 1\n\n</script>\n\n```",
        "zh-CN": "我们经常需要使用`localStorage`API，一个好用的可组合函数封装将帮助我们更好地使用它，让我们开始吧 👇: \n\n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * 实现`useLocalStorage`函数\n*/\nfunction useLocalStorage(key: string, initialValue: any) {\n  const value = ref(initialValue)\n\n  return value\n}\n\nconst counter = useLocalStorage(\"counter\", 0)\n\n// 我们可以通过触发`counter`的`getter`来获取本地存储的值\nconsole.log(counter.value)\n\n// 同样地,我们也可以通过触发`counter`的`setter`来设置本地存储的值\n\ncounter.value = 1\n\n</script>\n\n```"
      },
      "info": {
        "en": {
          "title": "useLocalStorage",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "Composable Function"
        },
        "zh-CN": {
          "title": "实现本地存储函数",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "19-v-focus",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5pbXBvcnQgeyByZWYgfSBmcm9tIFwidnVlXCJcblxuY29uc3Qgc3RhdGUgPSByZWYoZmFsc2UpXG5cbi8qKlxuICogSW1wbGVtZW50IHRoZSBjdXN0b20gZGlyZWN0aXZlXG4gKiBNYWtlIHN1cmUgdGhlIGlucHV0IGVsZW1lbnQgd2lsbCBmb2N1cy9ibHVyIHdoZW4gdG9nZ2xlIGBzdGF0ZWAgYXV0b21hdGljYWxseVxuICpcbiovXG5cbmNvbnN0IFZGb2N1cyA9IHtcblxufVxuXG5zZXRJbnRlcnZhbCgoKSA9PiB7XG4gIHN0YXRlLnZhbHVlID0gIXN0YXRlLnZhbHVlXG59LCAyMDAwKVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8aW5wdXQgdi1mb2N1cz1cInN0YXRlXCIgdHlwZT1cInRleHRcIj5cbjwvdGVtcGxhdGU+XG4ifQ==",
      "no": 19,
      "readme": {
        "en": "For this challenge, we'll start write custom directive. Let's start with `v-focus` 👇: \n\n```vue\n<script setup lang='ts'>\nimport { ref } from \"vue\"\n\nconst state = ref(false)\n\n/**\n * Implement the custom directive\n * Make sure the input element will focus/blur when toggle `state` automatically\n *\n*/\n\nconst VFocus = {\n\n}\n\nsetInterval(() => {\n  state.value = !state.value\n}, 2000)\n\n</script>\n\n<template>\n  <input v-focus=\"state\" type=\"text\">\n</template>\n\n```",
        "zh-CN": "这个挑战开始，我们将尝试编写自定义指令，让我们从`v-focus`开始 👇:\n\n```vue\n<script setup lang='ts'>\nimport { ref } from \"vue\"\n\nconst state = ref(false)\n\n/**\n * 实现一个自定义指令,让元素获取焦点\n * 确保当切换`state`时,元素随着状态值获取/失去焦点\n *\n*/\nconst VFocus = {\n\n}\n\nsetInterval(() => {\n  state.value = !state.value\n}, 2000)\n\n</script>\n\n<template>\n  <input v-focus=\"state\" type=\"text\">\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "v-focus",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "Directives"
        },
        "zh-CN": {
          "title": "切换焦点指令",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "2-ref-family",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgUmVmLCByZWFjdGl2ZSB9IGZyb20gXCJ2dWVcIlxuXG5jb25zdCBpbml0aWFsID0gcmVmKDEwKVxuY29uc3QgY291bnQgPSByZWYoMClcblxuLy8gQ2hhbGxlbmdlIDE6IFVwZGF0ZSByZWZcbmZ1bmN0aW9uIHVwZGF0ZSh2YWx1ZSkge1xuICAvLyBpbXBsLi4uXG59XG5cbi8qKlxuICogQ2hhbGxlbmdlIDI6IENoZWNrcyBpZiBgY291bnRgIGlzIGEgcmVmIG9iamVjdC5cbiAqIE1ha2UgdGhlIG91dHB1dCB0byBiZSAxXG4qL1xuY29uc29sZS5sb2coXG4gIC8vIGltcGwgPyAxIDogMFxuKVxuXG4vKipcbiAqIENoYWxsZW5nZSAzOiBVbndyYXAgcmVmXG4gKiBNYWtlIHRoZSBvdXRwdXQgdG8gYmUgdHJ1ZVxuKi9cbmZ1bmN0aW9uIGluaXRpYWxDb3VudCh2YWx1ZTogbnVtYmVyIHwgUmVmPG51bWJlcj4pIHtcbiAgLy8gTWFrZSB0aGUgb3V0cHV0IHRvIGJlIHRydWVcbiAgY29uc29sZS5sb2codmFsdWUgPT09IDEwKVxufVxuXG5pbml0aWFsQ291bnQoaW5pdGlhbClcblxuLyoqXG4gKiBDaGFsbGVuZ2UgNDpcbiAqIGNyZWF0ZSBhIHJlZiBmb3IgYSBwcm9wZXJ0eSBvbiBhIHNvdXJjZSByZWFjdGl2ZSBvYmplY3QuXG4gKiBUaGUgY3JlYXRlZCByZWYgaXMgc3luY2VkIHdpdGggaXRzIHNvdXJjZSBwcm9wZXJ0eTpcbiAqIG11dGF0aW5nIHRoZSBzb3VyY2UgcHJvcGVydHkgd2lsbCB1cGRhdGUgdGhlIHJlZiwgYW5kIHZpY2UtdmVyc2EuXG4gKiBNYWtlIHRoZSBvdXRwdXQgdG8gYmUgdHJ1ZVxuKi9cbmNvbnN0IHN0YXRlID0gcmVhY3RpdmUoe1xuICBmb286IDEsXG4gIGJhcjogMixcbn0pXG5jb25zdCBmb29SZWYgPSByZWYoKSAvLyBjaGFuZ2UgdGhlIGltcGwuLi5cblxuLy8gbXV0YXRpbmcgdGhlIHJlZiB1cGRhdGVzIHRoZSBvcmlnaW5hbFxuZm9vUmVmLnZhbHVlKytcbmNvbnNvbGUubG9nKHN0YXRlLmZvbyA9PT0gMilcblxuLy8gbXV0YXRpbmcgdGhlIG9yaWdpbmFsIGFsc28gdXBkYXRlcyB0aGUgcmVmXG5zdGF0ZS5mb28rK1xuY29uc29sZS5sb2coZm9vUmVmLnZhbHVlID09PSAzKVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8ZGl2PlxuICAgIDxwPlxuICAgICAgPHNwYW4gQGNsaWNrPVwidXBkYXRlKGNvdW50LTEpXCI+LTwvc3Bhbj5cbiAgICAgIHt7IGNvdW50IH19XG4gICAgICA8c3BhbiBAY2xpY2s9XCJ1cGRhdGUoY291bnQrMSlcIj4rPC9zcGFuPlxuICAgIDwvcD5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuIn0=",
      "no": 2,
      "readme": {
        "en": "For this challenge, you'll use `Reactivity API: ref` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, Ref, reactive } from \"vue\"\n\nconst initial = ref(10)\nconst count = ref(0)\n\n// Challenge 1: Update ref\nfunction update(value) {\n  // impl...\n}\n\n/**\n * Challenge 2: Checks if `count` is a ref object.\n * Make the output to be 1\n*/\nconsole.log(\n  // impl ? 1 : 0\n)\n\n/**\n * Challenge 3: Unwrap ref\n * Make the output to be true\n*/\nfunction initialCount(value: number | Ref<number>) {\n  // Make the output to be true\n  console.log(value === 10)\n}\n\ninitialCount(initial)\n\n/**\n * Challenge 4:\n * create a ref for a property on a source reactive object.\n * The created ref is synced with its source property:\n * mutating the source property will update the ref, and vice-versa.\n * Make the output to be true\n*/\nconst state = reactive({\n  foo: 1,\n  bar: 2,\n})\nconst fooRef = ref() // change the impl...\n\n// mutating the ref updates the original\nfooRef.value++\nconsole.log(state.foo === 2)\n\n// mutating the original also updates the ref\nstate.foo++\nconsole.log(fooRef.value === 3)\n\n</script>\n\n<template>\n  <div>\n    <h1>msg</h1>\n    <p>\n      <span @click=\"update(count-1)\">-</span>\n      {{ count }}\n      <span @click=\"update(count+1)\">+</span>\n    </p>\n  </div>\n</template>\n```",
        "zh-CN": "在这个挑战中，你将使用 `响应式 API: ref` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, Ref, reactive } from \"vue\"\n\nconst initial = ref(10)\nconst count = ref(0)\n\n// 挑战 1: 更新 ref\nfunction update(value) {\n  // 实现...\n}\n\n/**\n * 挑战 2: 检查`count`是否为一个 ref 对象\n * 确保以下输出为1\n*/\nconsole.log(\n  // impl ? 1 : 0\n)\n\n/**\n * 挑战 3: 如果参数是一个 ref，则返回内部值，否则返回参数本身\n * 确保以下输出为true\n*/\nfunction initialCount(value: number | Ref<number>) {\n  // 确保以下输出为true\n  console.log(value === 10)\n}\n\ninitialCount(initial)\n\n/**\n * 挑战 4:\n * 为源响应式对象上的某个 `property` 新创建一个 `ref`。\n * 然后,`ref` 可以被传递，它会保持对其源`property`的响应式连接。\n * 确保以下输出为true\n*/\nconst state = reactive({\n  foo: 1,\n  bar: 2,\n})\nconst fooRef = ref() // 修改这里的实现...\n\n// 修改引用将更新原引用\nfooRef.value++\nconsole.log(state.foo === 2)\n\n// 修改原引用也会更新`ref`\nstate.foo++\nconsole.log(fooRef.value === 3)\n\n</script>\n\n<template>\n  <div>\n    <h1>msg</h1>\n    <p>\n      <span @click=\"update(count-1)\">-</span>\n      {{ count }}\n      <span @click=\"update(count+1)\">+</span>\n    </p>\n  </div>\n</template>\n```"
      },
      "info": {
        "en": {
          "title": "ref family",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "easy",
          "tags": "Composition API,Reactivity:Core"
        },
        "zh-CN": {
          "title": "ref 全家桶",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "20-v-debounce-click",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbi8qKlxuICogSW1wbGVtZW50IHRoZSBjdXN0b20gZGlyZWN0aXZlXG4gKiBNYWtlIHN1cmUgdGhlIGBvbkNsaWNrYCBtZXRob2Qgb25seSB0cmlnZ2VyZWQgb25jZSB3aGVuIGNsaWNrZWQgbWFueSB0aW1lcyBxdWlja3lcbiAqIEFuZCB5b3UgbmVlZCB0byBzdXBwb3J0IHRoZSBkZWJvdW5jZSBkZWxheSB0aW1lIG9wdGlvbi4gZS5nIGB2LWRlYm91bmNlLWNsaWNrOm1zYFxuICpcbiovXG5cbmNvbnN0IFZEZWJvdW5jZUNsaWNrID0ge1xuXG59XG5cbmZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gIGNvbnNvbGUubG9nKFwiT25seSB0cmlnZ2VyZWQgb25jZSB3aGVuIGNsaWNrZWQgbWFueSB0aW1lcyBxdWlja3lcIilcbn1cblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGJ1dHRvbiB2LWRlYm91bmNlLWNsaWNrOjIwMD1cIm9uQ2xpY2tcIj5cbiAgICBDbGljayBvbiBpdCBtYW55IHRpbWVzIHF1aWNrbHlcbiAgPC9idXR0b24+XG48L3RlbXBsYXRlPlxuIn0=",
      "no": 20,
      "readme": {
        "en": "For this challenge, we're going to implement a debounced-click-directive, let's go 👇: \n\n```vue\n<script setup lang='ts'>\n\n/**\n * Implement the custom directive\n * Make sure the `onClick` method only triggered once when clicked many times quicky\n * And you need to support the debounce delay time option. e.g. `v-debounce-click:ms`\n *\n*/\n\nconst VDebounceClick = {\n\n}\n\nfunction onClick() {\n  console.log(\"Only triggered once when clicked many times quicky\")\n}\n\n</script>\n\n<template>\n  <button v-debounce-click:200=\"onClick\">\n    Click on it many times quickly\n  </button>\n</template>\n\n```",
        "zh-CN": "在这个挑战中，我们将尝试实现一个节流点击指令，让我们开始吧 👇:\n\n```vue\n<script setup lang='ts'>\n\n/**\n * 实现以下自定义指令\n * 确保在一定时间内当快速点击按钮多次时只触发一次点击事件\n * 你需要支持节流延迟时间选项, 用法如 `v-debounce-click:ms`\n *\n*/\n\nconst VDebounceClick = {\n\n}\n\nfunction onClick() {\n  console.log(\"Only triggered once when clicked many times quicky\")\n}\n\n</script>\n\n<template>\n  <button v-debounce-click:200=\"onClick\">\n    Click on it many times quickly\n  </button>\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "v-debounce-click",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "Directives"
        },
        "zh-CN": {
          "title": "节流点击指令",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "21-functional-component",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG4vKipcbiAqIEltcGxlbWVudCB0aGUgZnVuY3Rpb25hbCBjb21wb25lbnQgOlxuICogMS4gUmVuZGVyIGxpc3QgZWxlbWVudHMgKHVsL2xpKSB3aXRoIGxpc3QgZGF0YVxuICogMi4gQ2hhbmdlIHRoZSBsaXN0IGl0ZW0gdGV4dCBjb2xvciB0byBiZSByZWQgd2hlbiBjbGljayBpdC5cbiovXG5jb25zdCBMaXN0Q29tcG9uZW50ID0gKCkgPT4ge1xufVxuXG5jb25zdCBsaXN0ID0gW3tcbiAgbmFtZTogXCJKb2huXCIsXG59LCB7XG4gIG5hbWU6IFwiRG9lXCIsXG59LCB7XG4gIG5hbWU6IFwiU21pdGhcIixcbn1dXG5cbmNvbnN0IGFjdGl2ZUluZGV4ID0gcmVmKDApXG5cbmZ1bmN0aW9uIHRvZ2dsZShpbmRleDogbnVtYmVyKSB7XG4gIGFjdGl2ZUluZGV4LnZhbHVlID0gaW5kZXhcbn1cblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGxpc3QtY29tcG9uZW50XG4gICAgOmxpc3Q9XCJsaXN0XCJcbiAgICA6YWN0aXZlLWluZGV4PVwiYWN0aXZlSW5kZXhcIlxuICAgIEB0b2dnbGU9XCJ0b2dnbGVcIlxuICAvPlxuPC90ZW1wbGF0ZT5cbiJ9",
      "no": 21,
      "readme": {
        "en": "For this challenge, we're going to implement a functional component, let's go 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * Implement the functional component :\n * 1. Render list elements (ul/li) with list data\n * 2. Change the list item text color to be red when click it.\n*/\nconst ListComponent = () => {\n}\n\nconst list = [{\n  name: \"John\",\n}, {\n  name: \"Doe\",\n}, {\n  name: \"Smith\",\n}]\n\nconst activeIndex = ref(0)\n\nfunction toggle(index: number) {\n  activeIndex.value = index\n}\n\n</script>\n\n<template>\n  <list-component\n    :list=\"list\"\n    :active-index=\"activeIndex\"\n    @toggle=\"toggle\"\n  />\n</template>\n\n```",
        "zh-CN": "在这个挑战中，我们将尝试实现一个函数式组件，让我们开始吧 👇:\n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * 实现该函数式组件 :\n * 1. 使用`list`数据渲染列表元素 (ul/li)\n * 2. 当点击列表子元素时,将其文本颜色更改为红色\n*/\nconst ListComponent = () => {\n}\n\nconst list = [{\n  name: \"John\",\n}, {\n  name: \"Doe\",\n}, {\n  name: \"Smith\",\n}]\n\nconst activeIndex = ref(0)\n\nfunction toggle(index: number) {\n  activeIndex.value = index\n}\n\n</script>\n\n<template>\n  <list-component\n    :list=\"list\"\n    :active-index=\"activeIndex\"\n    @toggle=\"toggle\"\n  />\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "functional component",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "Components"
        },
        "zh-CN": {
          "title": "函数式组件",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "22-custom-element",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmltcG9ydCB7IG9uTW91bnRlZCB9IGZyb20gXCJ2dWVcIlxuXG4vKipcbiAqIEltcGxlbWVudCB0aGUgY29kZSB0byBjcmVhdGUgYSBjdXN0b20gZWxlbWVudC5cbiAqIE1ha2UgdGhlIG91dHB1dCBvZiBwYWdlIHNob3cgXCJIZWxsbyBWdWUuanNcIi5cbiovXG5jb25zdCBWdWVKcyA9IFwiPz8/XCJcblxub25Nb3VudGVkKCgpID0+IHtcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcHBcIikhLmlubmVySFRNTCA9IFwiPHZ1ZS1qcyBtZXNzYWdlPVxcXCJIZWxsbyBWdWUuanNcXFwiPjwvdnVlLWpzPlwiXG59KVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8ZGl2IGlkPVwiYXBwXCI+PC9kaXY+XG48L3RlbXBsYXRlPlxuIn0=",
      "no": 22,
      "readme": {
        "en": "Have you heard about the `Web Components` ? \n\nVue has excellent support for both consuming and creating custom elements. \n\nFor this challenge,you can try it out,let's go 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { onMounted } from \"vue\"\n\n/**\n * Implement the code to create a custom element.\n * Make the output of page show \"Hello Vue.js\".\n*/\nconst VueJs = \"???\"\n\nonMounted(() => {\n  document.getElementById(\"app\")!.innerHTML = \"<vue-js message=\\\"Hello Vue.js\\\"></vue-js>\"\n})\n\n</script>\n\n<template>\n  <div id=\"app\"></div>\n</template>\n\n```",
        "zh-CN": "你听说过 `Web Components` 吗 ? \n\nVue 能很好地解析和创建 `Web Components` 。\n\n在这个挑战中，我们将尝试了解它，让我们开始吧 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { onMounted } from \"vue\"\n\n/**\n * 实现以下代码创建一个自定义元素.\n * 确保页面输出 \"Hello Vue.js\".\n*/\nconst VueJs = \"???\"\n\nonMounted(() => {\n  document.getElementById(\"app\")!.innerHTML = \"<vue-js message=\\\"Hello Vue.js\\\"></vue-js>\"\n})\n\n</script>\n\n<template>\n  <div id=\"app\"></div>\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "custom element",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "hard",
          "tags": "Web Components"
        },
        "zh-CN": {
          "title": "自定义元素",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "23-custom-ref",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHdhdGNoIH0gZnJvbSBcInZ1ZVwiXG5cbi8qKlxuICogSW1wbGVtZW50IHRoZSBmdW5jdGlvblxuKi9cbmZ1bmN0aW9uIHVzZURlYm91bmNlZFJlZih2YWx1ZSwgZGVsYXkgPSAyMDApIHtcblxufVxuY29uc3QgdGV4dCA9IHVzZURlYm91bmNlZFJlZihcImhlbGxvXCIpXG5cbi8qKlxuICogTWFrZSBzdXJlIHRoZSBjYWxsYmFjayBvbmx5IHRyaWdnZXJlZCBvbmNlIHdoZW4gZW50ZXIgbXVsdGlwbGUgdGltZXMgaW4gYSBjZXJ0YWluIHRpbWVvdXRcbiovXG53YXRjaCh0ZXh0LCAodmFsdWUpID0+IHtcbiAgY29uc29sZS5sb2codmFsdWUpXG59KVxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGlucHV0IHYtbW9kZWw9XCJ0ZXh0XCIgLz5cbjwvdGVtcGxhdGU+XG4ifQ==",
      "no": 23,
      "readme": {
        "en": "The `debounce function` is so useful in the input box manipulation scenarios.\n\nA `debounced ref` is even more flexible in `Vue.js`, let's go 👇: \n\n```vue\n<script setup>\nimport { watch } from \"vue\"\n\n/**\n * Implement the function\n*/\nfunction useDebouncedRef(value, delay = 200) {\n\n}\nconst text = useDebouncedRef(\"hello\")\n\n/**\n * Make sure the callback only triggered once when enter multiple times in a certain timeout\n*/\nwatch(text, (value) => {\n  console.log(value)\n})\n</script>\n\n<template>\n  <input v-model=\"text\" />\n</template>\n\n```",
        "zh-CN": "防抖函数在输入框操作场景中非常有用。\n\n一个 防抖的`ref`在`Vue.js`更加灵活，让我们开始吧 👇: \n\n```vue\n<script setup>\nimport { watch } from \"vue\"\n\n/**\n * 补全以下函数来实现防抖ref :\n*/\nfunction useDebouncedRef(value, delay = 200) {\n\n}\nconst text = useDebouncedRef(\"hello\")\n\n/**\n * 确保在输入框快速输入时, 只触发一次回调。\n*/\nwatch(text, (value) => {\n  console.log(value)\n})\n</script>\n\n<template>\n  <input v-model=\"text\" />\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "custom ref",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "hard",
          "tags": "Composition API,Reactivity:Advanced"
        },
        "zh-CN": {
          "title": "自定义ref",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "24-v-active-style",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG4vKipcbiAqIEltcGxlbWVudCB0aGUgY3VzdG9tIGRpcmVjdGl2ZVxuICogTWFrZSBzdXJlIHRoZSBsaXN0IGl0ZW0gdGV4dCBjb2xvciBjaGFuZ2UgdG8gYmUgcmVkIHdoZW4gdG9nZ2xlIHRoZSB0YWJcbiAqXG4qL1xuY29uc3QgVkFjdGl2ZVN0eWxlID0ge1xuXG59XG5cbmNvbnN0IGxpc3QgPSBbMSwgMiwgMywgNCwgNSwgNiwgNywgOF1cbmNvbnN0IGFjdGl2ZVRhYiA9IHJlZigwKVxuZnVuY3Rpb24gdG9nZ2xlVGFiKGluZGV4OiBudW1iZXIpIHtcbiAgYWN0aXZlVGFiLnZhbHVlID0gaW5kZXhcbn1cblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPHVsPlxuICAgIDxsaVxuICAgICAgdi1mb3I9XCIoaXRlbSxpbmRleCkgaW4gbGlzdFwiXG4gICAgICA6a2V5PVwiaW5kZXhcIlxuICAgICAgdi1hY3RpdmUtc3R5bGU9XCJbeydjb2xvcic6J3JlZCd9LCgpID0+IGFjdGl2ZVRhYiA9PT0gaW5kZXhdXCJcbiAgICAgIEBjbGljaz1cInRvZ2dsZVRhYihpbmRleClcIlxuICAgID5cbiAgICAgIHt7IGl0ZW0gfX1cbiAgICA8L2xpPlxuICA8L3VsPlxuPC90ZW1wbGF0ZT5cbiJ9",
      "no": 24,
      "readme": {
        "en": "For this challenge, we're going to implement a active-style-directive, let's go 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * Implement the custom directive\n * Make sure the list item text color change to be red when toggle the tab\n *\n*/\nconst VActiveStyle = {\n\n}\n\nconst list = [1, 2, 3, 4, 5, 6, 7, 8]\nconst activeTab = ref(0)\nfunction toggleTab(index: number) {\n  activeTab.value = index\n}\n\n</script>\n\n<template>\n  <ul>\n    <li\n      v-for=\"(item,index) in list\"\n      :key=\"index\"\n      v-active-style=\"[{'color':'red'},() => activeTab === index]\"\n      @click=\"toggleTab(index)\"\n    >\n      {{ item }}\n    </li>\n  </ul>\n</template>\n\n```",
        "zh-CN": "在这个挑战中，我们将实现一个\"激活的样式\"指令，让我们开始吧 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * 实现该指令 :\n * 当切换该选项卡时，列表项文本颜色变为红色\n * \n*/\nconst VActiveStyle = {\n\n}\n\nconst list = [1, 2, 3, 4, 5, 6, 7, 8]\nconst activeTab = ref(0)\nfunction toggleTab(index: number) {\n  activeTab.value = index\n}\n\n</script>\n\n<template>\n  <ul>\n    <li\n      v-for=\"(item,index) in list\"\n      :key=\"index\"\n      v-active-style=\"[{'color':'red'},() => activeTab === index]\"\n      @click=\"toggleTab(index)\"\n    >\n      {{ item }}\n    </li>\n  </ul>\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "v-active-style",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "hard",
          "tags": "Directives"
        },
        "zh-CN": {
          "title": "激活的样式-指令",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "25-useMouse",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cblxuLy8gSW1wbGVtZW50IC4uLlxuZnVuY3Rpb24gdXNlRXZlbnRMaXN0ZW5lcih0YXJnZXQsIGV2ZW50LCBjYWxsYmFjaykge1xuXG59XG5cbi8vIEltcGxlbWVudCAuLi5cbmZ1bmN0aW9uIHVzZU1vdXNlKCkge1xuICB1c2VFdmVudExpc3RlbmVyKHdpbmRvdywgXCJtb3VzZW1vdmVcIiwgKCkgPT4ge30pXG59XG5jb25zdCB7IHgsIHkgfSA9IHVzZU1vdXNlKClcbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+TW91c2UgcG9zaXRpb24gaXMgYXQ6IHt7IHggfX0sIHt7IHkgfX08L3RlbXBsYXRlPlxuIn0=",
      "no": 25,
      "readme": {
        "en": "We should focus on Reusability when use `Vue.js`,Composables functions are a good way,let's go 👇: \n\n\n```vue\n<script setup lang=\"ts\">\n\n// Implement ...\nfunction useEventListener(target, event, callback) {\n\n}\n\n// Implement ...\nfunction useMouse() {\n  useEventListener(window, \"mousemove\", () => {})\n}\nconst { x, y } = useMouse()\n</script>\n\n<template>Mouse position is at: {{ x }}, {{ y }}</template>\n\n\n```",
        "zh-CN": "在使用`Vue.js`时，我们应该关注可复用性，可组合函数是一个很好的方式，让我们开始吧 👇: \n\n\n```vue\n<script setup lang=\"ts\">\n\n// Implement ...\nfunction useEventListener(target, event, callback) {\n\n}\n\n// Implement ...\nfunction useMouse() {\n  useEventListener(window, \"mousemove\", () => {})\n}\nconst { x, y } = useMouse()\n</script>\n\n<template>Mouse position is at: {{ x }}, {{ y }}</template>\n\n\n```"
      },
      "info": {
        "en": {
          "title": "useMouse",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "Composable Function"
        },
        "zh-CN": {
          "title": "鼠标坐标",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "26-v-model",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG4vKipcbiAqIEltcGxlbWVudCB0aGUgY3VzdG9tIGRpcmVjdGl2ZVxuICogQ3JlYXRlIGEgdHdvLXdheSBiaW5kaW5nIG9uIGEgZm9ybSBpbnB1dCBlbGVtZW50XG4gKlxuKi9cbmNvbnN0IFZPaE1vZGVsID0ge1xuXG59XG5cbmNvbnN0IHZhbHVlID0gcmVmKFwiSGVsbG8gVnVlLmpzXCIpXG5cbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDxpbnB1dCB2LW9oLW1vZGVsPVwidmFsdWVcIiB0eXBlPVwidGV4dFwiIC8+XG48L3RlbXBsYXRlPlxuIn0=",
      "no": 26,
      "readme": {
        "en": "For this challenge, we're going to implement a simple `v-model` directive, let's go 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * Implement the custom directive\n * Create a two-way binding on a form input element\n *\n*/\nconst VOhModel = {\n\n}\n\nconst value = ref(\"Hello Vue.js\")\n\n</script>\n\n<template>\n  <input v-oh-model=\"value\" type=\"text\" />\n</template>\n\n```",
        "zh-CN": "在这个挑战中，我们将尝试实现一个简单的`v-model`指令，让我们开始吧 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * 实现以下自定义指令\n * 在表单输入元素和数据间创建双向绑定\n *\n*/\nconst VOhModel = {\n\n}\n\nconst value = ref(\"Hello Vue.js\")\n\n</script>\n\n<template>\n  <input v-oh-model=\"value\" type=\"text\" />\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "v-model",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "hard",
          "tags": "Directives"
        },
        "zh-CN": {
          "title": "实现简易版`v-model`指令",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "27-global-css",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHRlbXBsYXRlPlxuICA8cD5IZWxsbyBWdWUuanM8L3A+XG48L3RlbXBsYXRlPlxuXG48c3R5bGUgc2NvcGVkPlxuXG5wIHtcbiAgZm9udC1zaXplOjIwcHg7XG4gIGNvbG9yOnJlZDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsaW5lLWhlaWdodDogNTBweDtcbn1cblxuLyogTWFrZSBpdCB3b3JrcyAqL1xuYm9keSB7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZC1jb2xvcjogYnVybHl3b29kO1xufVxuPC9zdHlsZT5cbiJ9",
      "no": 27,
      "readme": {
        "en": "Sometimes, we want to set global CSS in the scoped component, how to solve it, let's go 👇: \n\n```css\n<template>\n  <p>Hello Vue.js</p>\n</template>\n\n<style scoped>\n\np {\n  font-size:20px;\n  color:red;\n  text-align: center;\n  line-height: 50px;\n}\n\n/* Make it works */\nbody {\n  width: 100vw;\n  height: 100vh;\n  background-color: burlywood;\n}\n</style>\n```",
        "zh-CN": "有些时候，我们想在具有CSS作用域的`Vue`单文件组件设置全局CSS样式， 该怎么设置呢 ? 让我们开始吧 👇: \n\n```css\n<template>\n  <p>Hello Vue.js</p>\n</template>\n\n<style scoped>\n\np {\n  font-size:20px;\n  color:red;\n  text-align: center;\n  line-height: 50px;\n}\n\n/* 使其工作 */\nbody {\n  width: 100vw;\n  height: 100vh;\n  background-color: burlywood;\n}\n</style>\n```"
      },
      "info": {
        "en": {
          "title": "Global CSS",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "CSS Features"
        },
        "zh-CN": {
          "title": "全局CSS",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "3-losing-reactivity",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlYWN0aXZlIH0gZnJvbSBcInZ1ZVwiXG5cbmZ1bmN0aW9uIHVzZUNvdW50KCkge1xuICBjb25zdCBzdGF0ZSA9IHJlYWN0aXZlKHtcbiAgICBjb3VudDogMCxcbiAgfSlcblxuICBmdW5jdGlvbiB1cGRhdGUodmFsdWU6IG51bWJlcikge1xuICAgIHN0YXRlLmNvdW50ID0gdmFsdWVcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc3RhdGUsXG4gICAgdXBkYXRlLFxuICB9XG59XG5cbi8vIE1ha2UgZW5zdXJlIHRoZSBkZXN0cnVjdHVyZSB3aXRob3V0IGxvc2luZyByZWFjdGl2aXR5XG5jb25zdCB7IHN0YXRlOiB7IGNvdW50IH0sIHVwZGF0ZSB9ID0gdXNlQ291bnQoKVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8ZGl2PlxuICAgIDxwPlxuICAgICAgPHNwYW4gQGNsaWNrPVwidXBkYXRlKGNvdW50LTEpXCI+LTwvc3Bhbj5cbiAgICAgIHt7IGNvdW50IH19XG4gICAgICA8c3BhbiBAY2xpY2s9XCJ1cGRhdGUoY291bnQrMSlcIj4rPC9zcGFuPlxuICAgIDwvcD5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuIn0=",
      "no": 3,
      "readme": {
        "en": "In `JavaScript`, We always destructure/spread objects.\n\nIn `Vue.js`, We also destructure/spread the `reactive` object,but it'll losing the reactivity.\n\nHow to make ensure the destructure without losing reactivity ? Go ! \n\n\n```vue\n<script setup lang=\"ts\">\nimport { reactive } from \"vue\"\n\nfunction useCount() {\n  const state = reactive({\n    count: 0,\n  })\n\n  function update(value: number) {\n    state.count = value\n  }\n\n  return {\n    state,\n    update,\n  }\n}\n\n// Make ensure the destructure without losing reactivity\nconst { state: { count }, update } = useCount()\n\n</script>\n\n<template>\n  <div>\n    <p>\n      <span @click=\"update(count-1)\">-</span>\n      {{ count }}\n      <span @click=\"update(count+1)\">+</span>\n    </p>\n  </div>\n</template>\n\n```",
        "zh-CN": "在 `JavaScript` 中，我们经常解构/扩展对象。\n\n在`Vue.js`中，我们同样解构/扩展“响应式”对象，但它会失去响应性。\n\n如何保证解构/扩展不丢失响应性 ? 让我们开始吧 ！\n\n```vue\n<script setup lang=\"ts\">\nimport { reactive } from \"vue\"\n\nfunction useCount() {\n  const state = reactive({\n    count: 0,\n  })\n\n  function update(value: number) {\n    state.count = value\n  }\n\n  return {\n    state,\n    update,\n  }\n}\n\n// 确保解构不丢失响应性\nconst { state: { count }, update } = useCount()\n\n</script>\n\n<template>\n  <div>\n    <p>\n      <span @click=\"update(count-1)\">-</span>\n      {{ count }}\n      <span @click=\"update(count+1)\">+</span>\n    </p>\n  </div>\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "losing-reactivity",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "easy",
          "tags": "Composition API,Reactivity:Utilities"
        },
        "zh-CN": {
          "title": "响应性丟失",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "4-writable-computed",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgY29tcHV0ZWQgfSBmcm9tIFwidnVlXCJcblxuY29uc3QgY291bnQgPSByZWYoMSlcbmNvbnN0IHBsdXNPbmUgPSBjb21wdXRlZCgoKSA9PiBjb3VudC52YWx1ZSArIDEpXG5cbi8qKlxuICogTWFrZSB0aGUgYHBsdXNPbmVgIGNhbiBiZSB3cml0dGVuLlxuICogU28gd2UnbGwgZ2V0IHRoZSByZXN1bHQgaXMgYHBsdXNPbmVgIHRvIGJlIDMsIGFuZCBgY291bnRgIHRvIGJlIDIuXG4qL1xuXG5wbHVzT25lLnZhbHVlKytcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8cD57eyBjb3VudCB9fTwvcD5cbiAgICA8cD57eyBwbHVzT25lIH19PC9wPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG4ifQ==",
      "no": 4,
      "readme": {
        "en": "For this challenge, you need to creating a writable computed ref : \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, computed } from \"vue\"\n\nconst count = ref(1)\nconst plusOne = computed(() => count.value + 1)\n\n/**\n * Make the `plusOne` can be written.\n * So we'll get the result is `plusOne` to be 3, and `count` to be 2.\n*/\n\nplusOne.value++\n\n</script>\n\n<template>\n  <div>\n    <p>{{ count }}</p>\n    <p>{{ plusOne }}</p>\n  </div>\n</template>\n\n```",
        "zh-CN": "在这个挑战中，你需要创建一个可写的计算属性 :\n\n```vue\n<script setup lang=\"ts\">\nimport { ref, computed } from \"vue\"\n\nconst count = ref(1)\nconst plusOne = computed(() => count.value + 1)\n\n/**\n * 确保 `plusOne` 可以被写入。\n * 最终我们得到的结果应该是 `plusOne` 等于 3 和 `count` 等于 2。\n*/\n\nplusOne.value++\n\n</script>\n\n<template>\n  <div>\n    <p>{{ count }}</p>\n    <p>{{ plusOne }}</p>\n  </div>\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "writable-computed",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "easy",
          "tags": "Composition API,Reactivity:Core"
        },
        "zh-CN": {
          "title": "可写的计算属性",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "5-watch-family",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgd2F0Y2ggfSBmcm9tIFwidnVlXCJcblxuY29uc3QgY291bnQgPSByZWYoMClcblxuLyoqXG4gKiBDaGFsbGVuZ2VzIDE6IFdhdGNoIG9uY2VcbiAqIE1ha2Ugc3VyZSB0aGUgd2F0Y2ggY2FsbGJhY2sgb25seSB0cmlnZ2VyIG9uY2VcbiovXG53YXRjaChjb3VudCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhcIk9ubHkgdHJpZ2dlcmVkIG9uY2VcIilcbn0pXG5cbmNvdW50LnZhbHVlID0gMVxuc2V0VGltZW91dCgoKSA9PiBjb3VudC52YWx1ZSA9IDIpXG5cbi8qKlxuICogQ2hhbGxlbmdlcyAyOiBXYXRjaCBvYmplY3RcbiAqIE1ha2Ugc3VyZSB0aGUgd2F0Y2ggY2FsbGJhY2sgdHJpZ2dlcmVkXG4qL1xuY29uc3Qgc3RhdGUgPSByZWYoe1xuICBjb3VudDogMCxcbn0pXG5cbndhdGNoKHN0YXRlLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiVGhlIHN0YXRlLmNvdW50IHVwZGF0ZWRcIilcbn0pXG5cbnN0YXRlLnZhbHVlLmNvdW50ID0gMlxuXG4vKipcbiAqIENoYWxsZW5nZXMgMzogQ2FsbGJhY2sgRmx1c2ggVGltaW5nXG4gKiBNYWtlIHN1cmUgdmlzaXRlZCB0aGUgdXBkYXRlZCBlbGVSZWZcbiovXG5cbmNvbnN0IGVsZVJlZiA9IHJlZigpXG5jb25zdCBhZ2UgPSByZWYoMilcbndhdGNoKGFnZSwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhlbGVSZWYudmFsdWUpXG59KVxuYWdlLnZhbHVlID0gMThcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8cD5cbiAgICAgIHt7IGNvdW50IH19XG4gICAgPC9wPlxuICAgIDxwIHJlZj1cImVsZVJlZlwiPlxuICAgICAge3sgYWdlIH19XG4gICAgPC9wPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG4ifQ==",
      "no": 5,
      "readme": {
        "en": "For this challenge, you'll use `Reactivity API: watch` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\n\nconst count = ref(0)\n\n/**\n * Challenges 1: Watch once\n * Make sure the watch callback only trigger once\n*/\nwatch(count, () => {\n  console.log(\"Only triggered once\")\n})\n\ncount.value = 1\nsetTimeout(() => count.value = 2)\n\n/**\n * Challenges 2: Watch object\n * Make sure the watch callback triggered\n*/\nconst state = ref({\n  count: 0,\n})\n\nwatch(state, () => {\n  console.log(\"The state.count updated\")\n})\n\nstate.value.count = 2\n\n/**\n * Challenges 3: Callback Flush Timing\n * Make sure visited the updated eleRef\n*/\n\nconst eleRef = ref()\nconst age = ref(2)\nwatch(age, () => {\n  console.log(eleRef.value)\n})\nage.value = 18\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ count }}\n    </p>\n    <p ref=\"eleRef\">\n      {{ age }}\n    </p>\n  </div>\n</template>\n\n```",
        "zh-CN": "在这个挑战中，你将使用 `响应式 API: watch` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\n\nconst count = ref(0)\n\n/**\n * 挑战 1: Watch 一次\n * 确保副作用函数只执行一次\n*/\nwatch(count, () => {\n  console.log(\"Only triggered once\")\n})\n\ncount.value = 1\nsetTimeout(() => count.value = 2)\n\n/**\n * 挑战 2: Watch 对象\n * 确保副作用函数被正确触发\n*/\nconst state = ref({\n  count: 0,\n})\n\nwatch(state, () => {\n  console.log(\"The state.count updated\")\n})\n\nstate.value.count = 2\n\n/**\n * 挑战 3: 副作用函数刷新时机\n * 确保正确访问到更新后的`eleRef`值\n*/\n\nconst eleRef = ref()\nconst age = ref(2)\nwatch(age, () => {\n  console.log(eleRef.value)\n})\nage.value = 18\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ count }}\n    </p>\n    <p ref=\"eleRef\">\n      {{ age }}\n    </p>\n  </div>\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "watch family",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "easy",
          "tags": "Composition API,Reactivity:Core"
        },
        "zh-CN": {
          "title": "watch 全家桶",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "6-shallow-ref",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHNoYWxsb3dSZWYsIHdhdGNoIH0gZnJvbSBcInZ1ZVwiXG5cbmNvbnN0IHN0YXRlID0gc2hhbGxvd1JlZih7IGNvdW50OiAxIH0pXG5cbi8vIERvZXMgTk9UIHRyaWdnZXJcbndhdGNoKHN0YXRlLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiU3RhdGUuY291bnQgVXBkYXRlZFwiKVxufSwgeyBkZWVwOiB0cnVlIH0pXG5cbi8qKlxuICogTW9kaWZ5IHRoZSBjb2RlIHNvIHRoYXQgbWFrZSB0aGUgd2F0Y2ggY2FsbGJhY2sgdHJpZ2dlci5cbiovXG5zdGF0ZS52YWx1ZS5jb3VudCA9IDJcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8cD5cbiAgICAgIHt7IHN0YXRlLmNvdW50IH19XG4gICAgPC9wPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG4ifQ==",
      "no": 6,
      "readme": {
        "en": "For this challenge, you'll use `Reactivity API: shallowRef` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { shallowRef, watch } from \"vue\"\n\nconst state = shallowRef({ count: 1 })\n\n// Does NOT trigger\nwatch(state, () => {\n  console.log(\"State.count Updated\")\n}, { deep: true })\n\n/**\n * Modify the code so that make the watch callback trigger.\n*/\nstate.value.count = 2\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ state.count }}\n    </p>\n  </div>\n</template>\n\n```",
        "zh-CN": "在这个挑战中，你将使用 `响应式 API: shallowRef` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { shallowRef, watch } from \"vue\"\n\nconst state = shallowRef({ count: 1 })\n\n// 回调没被触发\nwatch(state, () => {\n  console.log(\"State.count Updated\")\n}, { deep: true })\n\n/**\n * 修改以下代码使watch回调被触发\n *\n*/\nstate.value.count = 2\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ state.count }}\n    </p>\n  </div>\n</template>\n\n```"
      },
      "info": {
        "en": {
          "title": "shallow ref",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "easy",
          "tags": "Composition API,Reactivity:Advanced"
        },
        "zh-CN": {
          "title": "浅层 ref",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "7-raw-api",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlYWN0aXZlLCBpc1JlYWN0aXZlIH0gZnJvbSBcInZ1ZVwiXG5cbmNvbnN0IHN0YXRlID0geyBjb3VudDogMSB9XG5jb25zdCByZWFjdGl2ZVN0YXRlID0gcmVhY3RpdmUoc3RhdGUpXG5cbi8qKlxuICogTW9kaWZ5IHRoZSBjb2RlIHNvIHRoYXQgbWFrZSB0aGUgb3V0cHV0IHRvIGJlIHRydWUuXG4qL1xuY29uc29sZS5sb2cocmVhY3RpdmVTdGF0ZSA9PT0gc3RhdGUpXG5cbi8qKlxuICogTW9kaWZ5IHRoZSBjb2RlIHNvIHRoYXQgbWFrZSB0aGUgb3V0cHV0IHRvIGJlIGZhbHNlLlxuKi9cbmNvbnN0IGluZm8gPSB7IGNvdW50OiAxIH1cbmNvbnN0IHJlYWN0aXZlSW5mbyA9IHJlYWN0aXZlKGluZm8pXG5cbmNvbnNvbGUubG9nKGlzUmVhY3RpdmUocmVhY3RpdmVJbmZvKSlcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8cD5cbiAgICAgIHt7IHJlYWN0aXZlU3RhdGUuY291bnQgfX1cbiAgICA8L3A+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cbiJ9",
      "no": 7,
      "readme": {
        "en": "For this challenge, you'll use `Reactivity API: [xx]Raw` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { reactive, isReactive } from \"vue\"\n\nconst state = { count: 1 }\nconst reactiveState = reactive(state)\n\n/**\n * Modify the code so that make the output to be true.\n*/\nconsole.log(reactiveState === state)\n\n/**\n * Modify the code so that make the output to be false.\n*/\nconst info = { count: 1 }\nconst reactiveInfo = reactive(info)\n\nconsole.log(isReactive(reactiveInfo))\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ reactiveState.count }}\n    </p>\n  </div>\n</template>\n\n\n```",
        "zh-CN": "在这个挑战中，你将使用 `响应式 API: [xx]Raw` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { reactive, isReactive } from \"vue\"\n\nconst state = { count: 1 }\nconst reactiveState = reactive(state)\n\n/**\n * 修改以下代码使输出为true\n*/\nconsole.log(reactiveState === state)\n\n/**\n * 修改以下代码使输出为false\n*/\nconst info = { count: 1 }\nconst reactiveInfo = reactive(info)\n\nconsole.log(isReactive(reactiveInfo))\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ reactiveState.count }}\n    </p>\n  </div>\n</template>\n\n\n```"
      },
      "info": {
        "en": {
          "title": "Raw API",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "Reactivity:Advanced"
        },
        "zh-CN": {
          "title": "原始值 API",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "8-effect-scope",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgY29tcHV0ZWQsIHdhdGNoLCB3YXRjaEVmZmVjdCB9IGZyb20gXCJ2dWVcIlxuXG5jb25zdCBjb3VudGVyID0gcmVmKDEpXG5jb25zdCBkb3VibGVkID0gY29tcHV0ZWQoKCkgPT4gY291bnRlci52YWx1ZSAqIDIpXG5cbi8vIHVzZSBgZWZmZWN0U2NvcGVgIEFQSSB0byBtYWtlIHRoZXNlIGVmZmVjdCBzdG9wIHRvZ2V0aGVyIGFmdGVyIHRyaWdnZXJlZCBvbmNlXG5cbndhdGNoKGRvdWJsZWQsICgpID0+IGNvbnNvbGUubG9nKGRvdWJsZWQudmFsdWUpKVxud2F0Y2hFZmZlY3QoKCkgPT4gY29uc29sZS5sb2coXCJDb3VudDogXCIsIGRvdWJsZWQudmFsdWUpKVxuXG5jb3VudGVyLnZhbHVlID0gMlxuXG5zZXRUaW1lb3V0KCgpID0+IHtcbiAgY291bnRlci52YWx1ZSA9IDRcbn0pXG5cbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDxkaXY+XG4gICAgPHA+XG4gICAgICB7eyBkb3VibGVkIH19XG4gICAgPC9wPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG4ifQ==",
      "no": 8,
      "readme": {
        "en": "For this challenge, you'll use `Reactivity API: effectScope` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, computed, watch, watchEffect } from \"vue\"\n\nconst counter = ref(1)\nconst doubled = computed(() => counter.value * 2)\n\n// use `effectScope` API to make these effect stop together after triggered once\n\nwatch(doubled, () => console.log(doubled.value))\nwatchEffect(() => console.log(\"Count: \", doubled.value))\n\ncounter.value = 2\n\nsetTimeout(() => {\n  counter.value = 4\n})\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ doubled }}\n    </p>\n  </div>\n</template>\n\n\n```",
        "zh-CN": "在这个挑战中，你将使用 `响应式 API: effectScope` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, computed, watch, watchEffect } from \"vue\"\n\nconst counter = ref(1)\nconst doubled = computed(() => counter.value * 2)\n\n// 使用 `effectScope` API 使这些Effect效果在触发一次后停止\n\nwatch(doubled, () => console.log(doubled.value))\nwatchEffect(() => console.log(\"Count: \", doubled.value))\n\ncounter.value = 2\n\nsetTimeout(() => {\n  counter.value = 4\n})\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ doubled }}\n    </p>\n  </div>\n</template>\n\n\n```"
      },
      "info": {
        "en": {
          "title": "effectScope API",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "medium",
          "tags": "Composition API,Reactivity:Advanced"
        },
        "zh-CN": {
          "title": "Effect作用域 API",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    },
    {
      "path": "9-dependency-injection",
      "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgcHJvdmlkZSB9IGZyb20gXCJ2dWVcIlxuaW1wb3J0IENoaWxkIGZyb20gXCIuL0NoaWxkLnZ1ZVwiXG5jb25zdCBjb3VudCA9IHJlZigxKVxucHJvdmlkZShcImNvdW50XCIsIGNvdW50KVxuc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICBjb3VudC52YWx1ZSsrXG59LCAxMDAwKVxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPENoaWxkIC8+XG48L3RlbXBsYXRlPlxuIiwiQ2hpbGQudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbi8vIEFkZCBjb2RlIHRvIG1ha2UgdGhlIGBjb3VudGAgdmFsdWUgaW5qZWN0ZWQgaW50byB0aGUgY2hpbGQgY29tcG9uZW50LlxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAge3sgY291bnQgfX1cbjwvdGVtcGxhdGU+XG4ifQ==",
      "no": 9,
      "readme": {
        "en": "For this challenge, you'll use `Composition API: Dependency Injection` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n// Child.vue \n\n<script setup lang=\"ts\">\n// Add code to make the `count` value injected into the child component.\n</script>\n\n<template>\n  {{ count }}\n</template>\n```",
        "zh-CN": "在这个挑战中，你将使用 `组合式 API: 依赖注入` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n// Child.vue \n\n<script setup lang=\"ts\">\n// 添加代码,使`count`值注入子组件\n</script>\n\n<template>\n  {{ count }}\n</template>\n```"
      },
      "info": {
        "en": {
          "title": "Dependency Injection",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          },
          "difficulty": "easy",
          "tags": "Composition API"
        },
        "zh-CN": {
          "title": "依赖注入",
          "author": {
            "name": "webfansplz",
            "github": "webfansplz"
          }
        }
      }
    }
  ],
  "challengesByDifficulty": {
    "warm": [
      {
        "path": "1-hello-word",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuY29uc3QgbXNnID0gcmVmKFwiSGVsbG8gV29ybGRcIilcbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDxkaXY+XG4gICAgPGgxPm1zZzwvaDE+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cbiJ9",
        "no": 1,
        "readme": {
          "en": "Hello, World!\n\nIn Vue.js Challenges, we use the Vue.js SFC Playground based on [vuejs/repl](https://github.com/vuejs/repl) to coding online.\n\nFor this challenge, you will need to change the following code to make the page show \"Hello World\" correctly.\n\n```vue\n<script setup>\nimport { ref } from \"vue\"\nconst msg = ref(\"Hello World\")\n</script>\n\n<template>\n  <div>\n    <!-- The output of the page expected to be Hello World -->\n    <h1>msg</h1>\n  </div>\n</template>\n\n```\n\nClick the `Take the Challenge` button to start coding! Happy Hacking!",
          "zh-CN": "Hello，World！\n\n在这个挑战中，我们使用基于 [vuejs/repl](https://github.com/vuejs/repl) 的`SFC`编码游乐场进行在线编码。\n\n对于这个挑战，您将需要更改以下代码，以使页面正确显示“Hello World”。\n\n```vue\n<script setup>\nimport { ref } from \"vue\"\nconst msg = ref(\"Hello World\")\n</script>\n\n<template>\n  <div>\n    <!-- 页面的期望输出是Hello World -->\n    <h1>msg</h1>\n  </div>\n</template>\n\n```\n\n\n点击上方的 `接受挑战` 开始编码！旅途愉快！"
        },
        "info": {
          "en": {
            "title": "Hello World",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "warm"
          },
          "zh-CN": {
            "title": "你好 !",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      }
    ],
    "easy": [
      {
        "path": "10-lifecycle",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgcHJvdmlkZSB9IGZyb20gXCJ2dWVcIlxuaW1wb3J0IENoaWxkIGZyb20gXCIuL0NoaWxkLnZ1ZVwiXG5cbmNvbnN0IHZpc2libGUgPSByZWYodHJ1ZSlcbmNvbnN0IHRpbWVyID0gcmVmKG51bGwpXG5jb25zdCBjb3VudCA9IHJlZigwKVxucHJvdmlkZShcInRpbWVyXCIsIHRpbWVyKVxucHJvdmlkZShcImNvdW50XCIsIGNvdW50KVxuXG5mdW5jdGlvbiB0b2dnbGUoKSB7XG4gIHZpc2libGUudmFsdWUgPSAhdmlzaWJsZS52YWx1ZVxufVxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8Q2hpbGQgdi1pZj1cInZpc2libGVcIiAvPlxuICAgIDxwPlxuICAgICAgPGJ1dHRvbiBAY2xpY2s9XCJ0b2dnbGVcIj5cbiAgICAgICAgVG9nZ2xlIENoaWxkIENvbXBvbmVudFxuICAgICAgPC9idXR0b24+XG4gICAgPC9wPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG4iLCJDaGlsZC52dWUiOiI8c2NyaXB0IHNldHVwIGxhbmc9XCJ0c1wiPlxuaW1wb3J0IHsgb25Nb3VudGVkLCBpbmplY3QgfSBmcm9tIFwidnVlXCJcblxuY29uc3QgdGltZXIgPSBpbmplY3QoXCJ0aW1lclwiKVxuY29uc3QgY291bnQgPSBpbmplY3QoXCJjb3VudFwiKVxuXG5vbk1vdW50ZWQoKCkgPT4ge1xuICB0aW1lci52YWx1ZSA9IHdpbmRvdy5zZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgY291bnQudmFsdWUrK1xuICB9LCAxMDAwKVxufSlcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8cD5cbiAgICAgIENoaWxkIENvbXBvbmVudDoge3sgY291bnQgfX1cbiAgICA8L3A+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cbiJ9",
        "no": 10,
        "readme": {
          "en": "For this challenge, you'll use `Composition API: Lifecycle Hooks` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n// Child.vue\n\n<script setup lang=\"ts\">\nimport { onMounted, inject } from \"vue\"\n\nconst timer = inject('timer')\nconst count = inject('count')\n\n\nonMounted(() => {\n  // The timer'll work unnormally while toggle child component,Let's go to fixed it.\n  timer.value = window.setInterval(() => {\n    count.value++\n  }, 1000)\n})\n\n</script>\n\n<template>\n  <div>\n    <p>\n      Child Component: {{ count }}\n    </p>\n  </div>\n</template>\n\n```",
          "zh-CN": "在这个挑战中，你将使用 `组合式 API: 生命周期钩子` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n// Child.vue\n\n<script setup lang=\"ts\">\nimport { onMounted, inject } from \"vue\"\n\nconst timer = inject('timer')\nconst count = inject('count')\n\n\nonMounted(() => {\n  // 切换子组件时, 定时器将不正常工作, 让我们来修复它 . \n  timer.value = window.setInterval(() => {\n    count.value++\n  }, 1000)\n})\n\n</script>\n\n<template>\n  <div>\n    <p>\n      Child Component: {{ count }}\n    </p>\n  </div>\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "Lifecycle Hooks",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "easy",
            "tags": "Composition API,Lifecycle"
          },
          "zh-CN": {
            "title": "生命周期钩子",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "11-next-dom-update",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG5jb25zdCBjb3VudCA9IHJlZigwKVxuXG5mdW5jdGlvbiBpbmNyZW1lbnQoKSB7XG4gIGNvdW50LnZhbHVlKytcblxuICAvKipcbiAgICogRE9NIG5vdCB5ZXQgdXBkYXRlZCwgaG93IHRvIG1ha2Ugc3VyZSB0aGUgRE9NIHVkcGF0ZWRcbiAgICogTWFrZSB0aGUgb3V0cHV0IHRvIGJlIHRydWVcbiAgKi9cblxuICBjb25zb2xlLmxvZygrZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjb3VudGVyXCIpLnRleHRDb250ZW50ID09PSAxKVxufVxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGJ1dHRvbiBpZD1cImNvdW50ZXJcIiBAY2xpY2s9XCJpbmNyZW1lbnRcIj5cbiAgICB7eyBjb3VudCB9fVxuICA8L2J1dHRvbj5cbjwvdGVtcGxhdGU+XG4ifQ==",
        "no": 11,
        "readme": {
          "en": "When you mutate reactive state in `Vue.js`, the resulting DOM updates are not applied synchronously. \n\n`Vue.js` provides a utility for waiting for the next DOM update flush, Let's Go 👇: \n\n```vue\n<script setup>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\nfunction increment() {\n  count.value++\n\n  /**\n   * DOM not yet updated, how to make sure the DOM udpated\n   * Make the output to be true\n  */\n\n  console.log(+document.getElementById(\"counter\").textContent === 1)\n}\n</script>\n\n<template>\n  <button id=\"counter\" @click=\"increment\">\n    {{ count }}\n  </button>\n</template>\n\n\n```",
          "zh-CN": "在`Vue.js`中改变响应式状态时，DOM不会同步更新。 \n`Vue.js` 提供了一个用于等待下一次DOM更新的方法，让我们开始吧 👇: \n\n```vue\n<script setup>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\nfunction increment() {\n  count.value++\n\n  /**\n   * DOM还未更新,如何确保DOM已经更新 ?\n   * 请保证以下输出为true\n  */\n\n  console.log(+document.getElementById(\"counter\").textContent === 1)\n}\n</script>\n\n<template>\n  <button id=\"counter\" @click=\"increment\">\n    {{ count }}\n  </button>\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "Next DOM update flush",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "easy",
            "tags": "Global API:General"
          },
          "zh-CN": {
            "title": "下一次DOM更新",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "13-dom-portal",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cblxuY29uc3QgbXNnID0gXCJIZWxsbyBXb3JsZFwiXG5cbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDwhLS0gUmVuZGVycyBpdHMgdG8gYSBjaGlsZCBlbGVtZW50IG9mIHRoZSBgYm9keWAgLS0+XG4gIDxzcGFuPnt7IG1zZyB9fTwvc3Bhbj5cbjwvdGVtcGxhdGU+XG4ifQ==",
        "no": 13,
        "readme": {
          "en": "`Vue.js` provides a built-in component that renders its slot content to another part of the `DOM`. \n\nDo you know what's it, Let's try it 👇: \n\n```vue\n<script setup>\n\nconst msg = \"Hello World\"\n\n</script>\n\n<template>\n  <!-- Renders its to a child element of the `body` -->\n  <span>{{ msg }}</span>\n</template>\n\n\n```",
          "zh-CN": "`Vue.js`提供了一个内置组件，将其插槽内容渲染到另一个DOM，成为该DOM的一部分。\n\n你知道它是什么吗 ? 让我们试试👇:\n\n```vue\n<script setup>\n\nconst msg = \"Hello World\"\n\n</script>\n\n<template>\n  <!-- 将以下元素渲染成`body`的子元素 -->\n  <span>{{ msg }}</span>\n</template>\n\n\n```"
        },
        "info": {
          "en": {
            "title": "DOM Portal",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "easy",
            "tags": "Components,Built-ins"
          },
          "zh-CN": {
            "title": "DOM传送门",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "14-dynamic-css-values",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuY29uc3QgdGhlbWUgPSByZWYoXCJyZWRcIilcblxuY29uc3QgY29sb3JzID0gW1wiYmx1ZVwiLCBcInllbGxvd1wiLCBcInJlZFwiLCBcImdyZWVuXCJdXG5cbnNldEludGVydmFsKCgpID0+IHtcbiAgdGhlbWUudmFsdWUgPSBjb2xvcnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogNCldXG59LCAxMDAwKVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8cD5oZWxsbzwvcD5cbjwvdGVtcGxhdGU+XG5cbjxzdHlsZSBzY29wZWQ+XG4vKiBNb2RpZnkgdGhlIGNvZGUgdG8gYmluZCB0aGUgZHluYW1pYyBjb2xvciAqL1xucCB7XG4gIGNvbG9yOiByZWRcbn1cbjwvc3R5bGU+XG4ifQ==",
        "no": 14,
        "readme": {
          "en": "SFC `<style>` tags support linking CSS values to dynamic component.\n\nDo you know what's it, Let's try it 👇: \n\n```vue\n<script setup>\nimport { ref } from \"vue\"\nconst theme = ref(\"red\")\n\nconst colors = [\"blue\", \"yellow\", \"red\", \"green\"]\n\nsetInterval(() => {\n  theme.value = colors[Math.floor(Math.random() * 4)]\n}, 1000)\n\n</script>\n\n<template>\n  <p>hello</p>\n</template>\n\n<style scoped>\n/* Modify the code to bind the dynamic color */\np {\n  color: red\n}\n</style>\n\n```",
          "zh-CN": "`Vue`单文件组件 `<style>` 模块支持给CSS绑定动态值。\n\n你知道它是什么吗 ? 让我们试试👇:\n\n```vue\n<script setup>\nimport { ref } from \"vue\"\nconst theme = ref(\"red\")\n\nconst colors = [\"blue\", \"yellow\", \"red\", \"green\"]\n\nsetInterval(() => {\n  theme.value = colors[Math.floor(Math.random() * 4)]\n}, 1000)\n\n</script>\n\n<template>\n  <p>hello</p>\n</template>\n\n<style scoped>\n/* 修改以下代码绑定动态颜色 */\np {\n  color: red\n}\n</style>\n\n```"
        },
        "info": {
          "en": {
            "title": "Dynamic css values",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "easy",
            "tags": "CSS Features"
          },
          "zh-CN": {
            "title": "动态CSS",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "2-ref-family",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgUmVmLCByZWFjdGl2ZSB9IGZyb20gXCJ2dWVcIlxuXG5jb25zdCBpbml0aWFsID0gcmVmKDEwKVxuY29uc3QgY291bnQgPSByZWYoMClcblxuLy8gQ2hhbGxlbmdlIDE6IFVwZGF0ZSByZWZcbmZ1bmN0aW9uIHVwZGF0ZSh2YWx1ZSkge1xuICAvLyBpbXBsLi4uXG59XG5cbi8qKlxuICogQ2hhbGxlbmdlIDI6IENoZWNrcyBpZiBgY291bnRgIGlzIGEgcmVmIG9iamVjdC5cbiAqIE1ha2UgdGhlIG91dHB1dCB0byBiZSAxXG4qL1xuY29uc29sZS5sb2coXG4gIC8vIGltcGwgPyAxIDogMFxuKVxuXG4vKipcbiAqIENoYWxsZW5nZSAzOiBVbndyYXAgcmVmXG4gKiBNYWtlIHRoZSBvdXRwdXQgdG8gYmUgdHJ1ZVxuKi9cbmZ1bmN0aW9uIGluaXRpYWxDb3VudCh2YWx1ZTogbnVtYmVyIHwgUmVmPG51bWJlcj4pIHtcbiAgLy8gTWFrZSB0aGUgb3V0cHV0IHRvIGJlIHRydWVcbiAgY29uc29sZS5sb2codmFsdWUgPT09IDEwKVxufVxuXG5pbml0aWFsQ291bnQoaW5pdGlhbClcblxuLyoqXG4gKiBDaGFsbGVuZ2UgNDpcbiAqIGNyZWF0ZSBhIHJlZiBmb3IgYSBwcm9wZXJ0eSBvbiBhIHNvdXJjZSByZWFjdGl2ZSBvYmplY3QuXG4gKiBUaGUgY3JlYXRlZCByZWYgaXMgc3luY2VkIHdpdGggaXRzIHNvdXJjZSBwcm9wZXJ0eTpcbiAqIG11dGF0aW5nIHRoZSBzb3VyY2UgcHJvcGVydHkgd2lsbCB1cGRhdGUgdGhlIHJlZiwgYW5kIHZpY2UtdmVyc2EuXG4gKiBNYWtlIHRoZSBvdXRwdXQgdG8gYmUgdHJ1ZVxuKi9cbmNvbnN0IHN0YXRlID0gcmVhY3RpdmUoe1xuICBmb286IDEsXG4gIGJhcjogMixcbn0pXG5jb25zdCBmb29SZWYgPSByZWYoKSAvLyBjaGFuZ2UgdGhlIGltcGwuLi5cblxuLy8gbXV0YXRpbmcgdGhlIHJlZiB1cGRhdGVzIHRoZSBvcmlnaW5hbFxuZm9vUmVmLnZhbHVlKytcbmNvbnNvbGUubG9nKHN0YXRlLmZvbyA9PT0gMilcblxuLy8gbXV0YXRpbmcgdGhlIG9yaWdpbmFsIGFsc28gdXBkYXRlcyB0aGUgcmVmXG5zdGF0ZS5mb28rK1xuY29uc29sZS5sb2coZm9vUmVmLnZhbHVlID09PSAzKVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8ZGl2PlxuICAgIDxwPlxuICAgICAgPHNwYW4gQGNsaWNrPVwidXBkYXRlKGNvdW50LTEpXCI+LTwvc3Bhbj5cbiAgICAgIHt7IGNvdW50IH19XG4gICAgICA8c3BhbiBAY2xpY2s9XCJ1cGRhdGUoY291bnQrMSlcIj4rPC9zcGFuPlxuICAgIDwvcD5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuIn0=",
        "no": 2,
        "readme": {
          "en": "For this challenge, you'll use `Reactivity API: ref` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, Ref, reactive } from \"vue\"\n\nconst initial = ref(10)\nconst count = ref(0)\n\n// Challenge 1: Update ref\nfunction update(value) {\n  // impl...\n}\n\n/**\n * Challenge 2: Checks if `count` is a ref object.\n * Make the output to be 1\n*/\nconsole.log(\n  // impl ? 1 : 0\n)\n\n/**\n * Challenge 3: Unwrap ref\n * Make the output to be true\n*/\nfunction initialCount(value: number | Ref<number>) {\n  // Make the output to be true\n  console.log(value === 10)\n}\n\ninitialCount(initial)\n\n/**\n * Challenge 4:\n * create a ref for a property on a source reactive object.\n * The created ref is synced with its source property:\n * mutating the source property will update the ref, and vice-versa.\n * Make the output to be true\n*/\nconst state = reactive({\n  foo: 1,\n  bar: 2,\n})\nconst fooRef = ref() // change the impl...\n\n// mutating the ref updates the original\nfooRef.value++\nconsole.log(state.foo === 2)\n\n// mutating the original also updates the ref\nstate.foo++\nconsole.log(fooRef.value === 3)\n\n</script>\n\n<template>\n  <div>\n    <h1>msg</h1>\n    <p>\n      <span @click=\"update(count-1)\">-</span>\n      {{ count }}\n      <span @click=\"update(count+1)\">+</span>\n    </p>\n  </div>\n</template>\n```",
          "zh-CN": "在这个挑战中，你将使用 `响应式 API: ref` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, Ref, reactive } from \"vue\"\n\nconst initial = ref(10)\nconst count = ref(0)\n\n// 挑战 1: 更新 ref\nfunction update(value) {\n  // 实现...\n}\n\n/**\n * 挑战 2: 检查`count`是否为一个 ref 对象\n * 确保以下输出为1\n*/\nconsole.log(\n  // impl ? 1 : 0\n)\n\n/**\n * 挑战 3: 如果参数是一个 ref，则返回内部值，否则返回参数本身\n * 确保以下输出为true\n*/\nfunction initialCount(value: number | Ref<number>) {\n  // 确保以下输出为true\n  console.log(value === 10)\n}\n\ninitialCount(initial)\n\n/**\n * 挑战 4:\n * 为源响应式对象上的某个 `property` 新创建一个 `ref`。\n * 然后,`ref` 可以被传递，它会保持对其源`property`的响应式连接。\n * 确保以下输出为true\n*/\nconst state = reactive({\n  foo: 1,\n  bar: 2,\n})\nconst fooRef = ref() // 修改这里的实现...\n\n// 修改引用将更新原引用\nfooRef.value++\nconsole.log(state.foo === 2)\n\n// 修改原引用也会更新`ref`\nstate.foo++\nconsole.log(fooRef.value === 3)\n\n</script>\n\n<template>\n  <div>\n    <h1>msg</h1>\n    <p>\n      <span @click=\"update(count-1)\">-</span>\n      {{ count }}\n      <span @click=\"update(count+1)\">+</span>\n    </p>\n  </div>\n</template>\n```"
        },
        "info": {
          "en": {
            "title": "ref family",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "easy",
            "tags": "Composition API,Reactivity:Core"
          },
          "zh-CN": {
            "title": "ref 全家桶",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "3-losing-reactivity",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlYWN0aXZlIH0gZnJvbSBcInZ1ZVwiXG5cbmZ1bmN0aW9uIHVzZUNvdW50KCkge1xuICBjb25zdCBzdGF0ZSA9IHJlYWN0aXZlKHtcbiAgICBjb3VudDogMCxcbiAgfSlcblxuICBmdW5jdGlvbiB1cGRhdGUodmFsdWU6IG51bWJlcikge1xuICAgIHN0YXRlLmNvdW50ID0gdmFsdWVcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgc3RhdGUsXG4gICAgdXBkYXRlLFxuICB9XG59XG5cbi8vIE1ha2UgZW5zdXJlIHRoZSBkZXN0cnVjdHVyZSB3aXRob3V0IGxvc2luZyByZWFjdGl2aXR5XG5jb25zdCB7IHN0YXRlOiB7IGNvdW50IH0sIHVwZGF0ZSB9ID0gdXNlQ291bnQoKVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8ZGl2PlxuICAgIDxwPlxuICAgICAgPHNwYW4gQGNsaWNrPVwidXBkYXRlKGNvdW50LTEpXCI+LTwvc3Bhbj5cbiAgICAgIHt7IGNvdW50IH19XG4gICAgICA8c3BhbiBAY2xpY2s9XCJ1cGRhdGUoY291bnQrMSlcIj4rPC9zcGFuPlxuICAgIDwvcD5cbiAgPC9kaXY+XG48L3RlbXBsYXRlPlxuIn0=",
        "no": 3,
        "readme": {
          "en": "In `JavaScript`, We always destructure/spread objects.\n\nIn `Vue.js`, We also destructure/spread the `reactive` object,but it'll losing the reactivity.\n\nHow to make ensure the destructure without losing reactivity ? Go ! \n\n\n```vue\n<script setup lang=\"ts\">\nimport { reactive } from \"vue\"\n\nfunction useCount() {\n  const state = reactive({\n    count: 0,\n  })\n\n  function update(value: number) {\n    state.count = value\n  }\n\n  return {\n    state,\n    update,\n  }\n}\n\n// Make ensure the destructure without losing reactivity\nconst { state: { count }, update } = useCount()\n\n</script>\n\n<template>\n  <div>\n    <p>\n      <span @click=\"update(count-1)\">-</span>\n      {{ count }}\n      <span @click=\"update(count+1)\">+</span>\n    </p>\n  </div>\n</template>\n\n```",
          "zh-CN": "在 `JavaScript` 中，我们经常解构/扩展对象。\n\n在`Vue.js`中，我们同样解构/扩展“响应式”对象，但它会失去响应性。\n\n如何保证解构/扩展不丢失响应性 ? 让我们开始吧 ！\n\n```vue\n<script setup lang=\"ts\">\nimport { reactive } from \"vue\"\n\nfunction useCount() {\n  const state = reactive({\n    count: 0,\n  })\n\n  function update(value: number) {\n    state.count = value\n  }\n\n  return {\n    state,\n    update,\n  }\n}\n\n// 确保解构不丢失响应性\nconst { state: { count }, update } = useCount()\n\n</script>\n\n<template>\n  <div>\n    <p>\n      <span @click=\"update(count-1)\">-</span>\n      {{ count }}\n      <span @click=\"update(count+1)\">+</span>\n    </p>\n  </div>\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "losing-reactivity",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "easy",
            "tags": "Composition API,Reactivity:Utilities"
          },
          "zh-CN": {
            "title": "响应性丟失",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "4-writable-computed",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgY29tcHV0ZWQgfSBmcm9tIFwidnVlXCJcblxuY29uc3QgY291bnQgPSByZWYoMSlcbmNvbnN0IHBsdXNPbmUgPSBjb21wdXRlZCgoKSA9PiBjb3VudC52YWx1ZSArIDEpXG5cbi8qKlxuICogTWFrZSB0aGUgYHBsdXNPbmVgIGNhbiBiZSB3cml0dGVuLlxuICogU28gd2UnbGwgZ2V0IHRoZSByZXN1bHQgaXMgYHBsdXNPbmVgIHRvIGJlIDMsIGFuZCBgY291bnRgIHRvIGJlIDIuXG4qL1xuXG5wbHVzT25lLnZhbHVlKytcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8cD57eyBjb3VudCB9fTwvcD5cbiAgICA8cD57eyBwbHVzT25lIH19PC9wPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG4ifQ==",
        "no": 4,
        "readme": {
          "en": "For this challenge, you need to creating a writable computed ref : \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, computed } from \"vue\"\n\nconst count = ref(1)\nconst plusOne = computed(() => count.value + 1)\n\n/**\n * Make the `plusOne` can be written.\n * So we'll get the result is `plusOne` to be 3, and `count` to be 2.\n*/\n\nplusOne.value++\n\n</script>\n\n<template>\n  <div>\n    <p>{{ count }}</p>\n    <p>{{ plusOne }}</p>\n  </div>\n</template>\n\n```",
          "zh-CN": "在这个挑战中，你需要创建一个可写的计算属性 :\n\n```vue\n<script setup lang=\"ts\">\nimport { ref, computed } from \"vue\"\n\nconst count = ref(1)\nconst plusOne = computed(() => count.value + 1)\n\n/**\n * 确保 `plusOne` 可以被写入。\n * 最终我们得到的结果应该是 `plusOne` 等于 3 和 `count` 等于 2。\n*/\n\nplusOne.value++\n\n</script>\n\n<template>\n  <div>\n    <p>{{ count }}</p>\n    <p>{{ plusOne }}</p>\n  </div>\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "writable-computed",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "easy",
            "tags": "Composition API,Reactivity:Core"
          },
          "zh-CN": {
            "title": "可写的计算属性",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "5-watch-family",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgd2F0Y2ggfSBmcm9tIFwidnVlXCJcblxuY29uc3QgY291bnQgPSByZWYoMClcblxuLyoqXG4gKiBDaGFsbGVuZ2VzIDE6IFdhdGNoIG9uY2VcbiAqIE1ha2Ugc3VyZSB0aGUgd2F0Y2ggY2FsbGJhY2sgb25seSB0cmlnZ2VyIG9uY2VcbiovXG53YXRjaChjb3VudCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhcIk9ubHkgdHJpZ2dlcmVkIG9uY2VcIilcbn0pXG5cbmNvdW50LnZhbHVlID0gMVxuc2V0VGltZW91dCgoKSA9PiBjb3VudC52YWx1ZSA9IDIpXG5cbi8qKlxuICogQ2hhbGxlbmdlcyAyOiBXYXRjaCBvYmplY3RcbiAqIE1ha2Ugc3VyZSB0aGUgd2F0Y2ggY2FsbGJhY2sgdHJpZ2dlcmVkXG4qL1xuY29uc3Qgc3RhdGUgPSByZWYoe1xuICBjb3VudDogMCxcbn0pXG5cbndhdGNoKHN0YXRlLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiVGhlIHN0YXRlLmNvdW50IHVwZGF0ZWRcIilcbn0pXG5cbnN0YXRlLnZhbHVlLmNvdW50ID0gMlxuXG4vKipcbiAqIENoYWxsZW5nZXMgMzogQ2FsbGJhY2sgRmx1c2ggVGltaW5nXG4gKiBNYWtlIHN1cmUgdmlzaXRlZCB0aGUgdXBkYXRlZCBlbGVSZWZcbiovXG5cbmNvbnN0IGVsZVJlZiA9IHJlZigpXG5jb25zdCBhZ2UgPSByZWYoMilcbndhdGNoKGFnZSwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhlbGVSZWYudmFsdWUpXG59KVxuYWdlLnZhbHVlID0gMThcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8cD5cbiAgICAgIHt7IGNvdW50IH19XG4gICAgPC9wPlxuICAgIDxwIHJlZj1cImVsZVJlZlwiPlxuICAgICAge3sgYWdlIH19XG4gICAgPC9wPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG4ifQ==",
        "no": 5,
        "readme": {
          "en": "For this challenge, you'll use `Reactivity API: watch` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\n\nconst count = ref(0)\n\n/**\n * Challenges 1: Watch once\n * Make sure the watch callback only trigger once\n*/\nwatch(count, () => {\n  console.log(\"Only triggered once\")\n})\n\ncount.value = 1\nsetTimeout(() => count.value = 2)\n\n/**\n * Challenges 2: Watch object\n * Make sure the watch callback triggered\n*/\nconst state = ref({\n  count: 0,\n})\n\nwatch(state, () => {\n  console.log(\"The state.count updated\")\n})\n\nstate.value.count = 2\n\n/**\n * Challenges 3: Callback Flush Timing\n * Make sure visited the updated eleRef\n*/\n\nconst eleRef = ref()\nconst age = ref(2)\nwatch(age, () => {\n  console.log(eleRef.value)\n})\nage.value = 18\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ count }}\n    </p>\n    <p ref=\"eleRef\">\n      {{ age }}\n    </p>\n  </div>\n</template>\n\n```",
          "zh-CN": "在这个挑战中，你将使用 `响应式 API: watch` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, watch } from \"vue\"\n\nconst count = ref(0)\n\n/**\n * 挑战 1: Watch 一次\n * 确保副作用函数只执行一次\n*/\nwatch(count, () => {\n  console.log(\"Only triggered once\")\n})\n\ncount.value = 1\nsetTimeout(() => count.value = 2)\n\n/**\n * 挑战 2: Watch 对象\n * 确保副作用函数被正确触发\n*/\nconst state = ref({\n  count: 0,\n})\n\nwatch(state, () => {\n  console.log(\"The state.count updated\")\n})\n\nstate.value.count = 2\n\n/**\n * 挑战 3: 副作用函数刷新时机\n * 确保正确访问到更新后的`eleRef`值\n*/\n\nconst eleRef = ref()\nconst age = ref(2)\nwatch(age, () => {\n  console.log(eleRef.value)\n})\nage.value = 18\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ count }}\n    </p>\n    <p ref=\"eleRef\">\n      {{ age }}\n    </p>\n  </div>\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "watch family",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "easy",
            "tags": "Composition API,Reactivity:Core"
          },
          "zh-CN": {
            "title": "watch 全家桶",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "6-shallow-ref",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHNoYWxsb3dSZWYsIHdhdGNoIH0gZnJvbSBcInZ1ZVwiXG5cbmNvbnN0IHN0YXRlID0gc2hhbGxvd1JlZih7IGNvdW50OiAxIH0pXG5cbi8vIERvZXMgTk9UIHRyaWdnZXJcbndhdGNoKHN0YXRlLCAoKSA9PiB7XG4gIGNvbnNvbGUubG9nKFwiU3RhdGUuY291bnQgVXBkYXRlZFwiKVxufSwgeyBkZWVwOiB0cnVlIH0pXG5cbi8qKlxuICogTW9kaWZ5IHRoZSBjb2RlIHNvIHRoYXQgbWFrZSB0aGUgd2F0Y2ggY2FsbGJhY2sgdHJpZ2dlci5cbiovXG5zdGF0ZS52YWx1ZS5jb3VudCA9IDJcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8cD5cbiAgICAgIHt7IHN0YXRlLmNvdW50IH19XG4gICAgPC9wPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG4ifQ==",
        "no": 6,
        "readme": {
          "en": "For this challenge, you'll use `Reactivity API: shallowRef` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { shallowRef, watch } from \"vue\"\n\nconst state = shallowRef({ count: 1 })\n\n// Does NOT trigger\nwatch(state, () => {\n  console.log(\"State.count Updated\")\n}, { deep: true })\n\n/**\n * Modify the code so that make the watch callback trigger.\n*/\nstate.value.count = 2\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ state.count }}\n    </p>\n  </div>\n</template>\n\n```",
          "zh-CN": "在这个挑战中，你将使用 `响应式 API: shallowRef` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { shallowRef, watch } from \"vue\"\n\nconst state = shallowRef({ count: 1 })\n\n// 回调没被触发\nwatch(state, () => {\n  console.log(\"State.count Updated\")\n}, { deep: true })\n\n/**\n * 修改以下代码使watch回调被触发\n *\n*/\nstate.value.count = 2\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ state.count }}\n    </p>\n  </div>\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "shallow ref",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "easy",
            "tags": "Composition API,Reactivity:Advanced"
          },
          "zh-CN": {
            "title": "浅层 ref",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "9-dependency-injection",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgcHJvdmlkZSB9IGZyb20gXCJ2dWVcIlxuaW1wb3J0IENoaWxkIGZyb20gXCIuL0NoaWxkLnZ1ZVwiXG5jb25zdCBjb3VudCA9IHJlZigxKVxucHJvdmlkZShcImNvdW50XCIsIGNvdW50KVxuc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICBjb3VudC52YWx1ZSsrXG59LCAxMDAwKVxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPENoaWxkIC8+XG48L3RlbXBsYXRlPlxuIiwiQ2hpbGQudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbi8vIEFkZCBjb2RlIHRvIG1ha2UgdGhlIGBjb3VudGAgdmFsdWUgaW5qZWN0ZWQgaW50byB0aGUgY2hpbGQgY29tcG9uZW50LlxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAge3sgY291bnQgfX1cbjwvdGVtcGxhdGU+XG4ifQ==",
        "no": 9,
        "readme": {
          "en": "For this challenge, you'll use `Composition API: Dependency Injection` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n// Child.vue \n\n<script setup lang=\"ts\">\n// Add code to make the `count` value injected into the child component.\n</script>\n\n<template>\n  {{ count }}\n</template>\n```",
          "zh-CN": "在这个挑战中，你将使用 `组合式 API: 依赖注入` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n// Child.vue \n\n<script setup lang=\"ts\">\n// 添加代码,使`count`值注入子组件\n</script>\n\n<template>\n  {{ count }}\n</template>\n```"
        },
        "info": {
          "en": {
            "title": "Dependency Injection",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "easy",
            "tags": "Composition API"
          },
          "zh-CN": {
            "title": "依赖注入",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      }
    ],
    "medium": [
      {
        "path": "12-optimize-perf-directive",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG5jb25zdCBjb3VudCA9IHJlZigwKVxuXG5zZXRJbnRlcnZhbCgoKSA9PiB7XG4gIGNvdW50LnZhbHVlKytcbn0sIDEwMDApXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8c3Bhbj5NYWtlIGl0IG5ldmVyIGNoYW5nZToge3sgY291bnQgfX08L3NwYW4+XG48L3RlbXBsYXRlPlxuIn0=",
        "no": 12,
        "readme": {
          "en": "`Vue.js` provides a directive so that render the element and component once only, and skip future updates.\n\nDo you know what's it, Let's try it 👇: \n\n```vue\n<script setup>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\nsetInterval(() => {\n  count.value++\n}, 1000)\n</script>\n\n<template>\n  <span>Make it never change: {{ count }}</span>\n</template>\n\n```",
          "zh-CN": "`Vue.js` 提供了一个指令，以便只渲染一次元素和组件，并且跳过以后的更新。\n\n你知道它是什么吗 ? 让我们试试👇:\n\n```vue\n<script setup>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\nsetInterval(() => {\n  count.value++\n}, 1000)\n</script>\n\n<template>\n  <span>使它从不更新: {{ count }}</span>\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "Optimize performance directive",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "Directives,Built-ins"
          },
          "zh-CN": {
            "title": "优化性能的指令",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "15-useToggle",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbi8qKlxuICogSW1wbGVtZW50IGEgY29tcG9zYWJsZSBmdW5jdGlvbiB0aGF0IHRvZ2dsZSBzdGF0ZVxuICogTWFrZSB0aGUgZnVuY3Rpb24gd29yayBmaW5lXG4qL1xuZnVuY3Rpb24gdXNlVG9nZ2xlKCkge1xuXG59XG5cbmNvbnN0IFtzdGF0ZSwgdG9nZ2xlXSA9IHVzZVRvZ2dsZShmYWxzZSlcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPHA+U3RhdGU6IHt7IHN0YXRlID8gJ09OJyA6ICdPRkYnIH19PC9wPlxuICA8cCBAY2xpY2s9XCJ0b2dnbGVcIj5cbiAgICBUb2dnbGUgc3RhdGVcbiAgPC9wPlxuPC90ZW1wbGF0ZT5cbiJ9",
        "no": 15,
        "readme": {
          "en": "For this challenge, we'll start write composable function. Let's start with `useToggle` 👇: \n\n\n```vue\n<script setup lang='ts'>\n\n/**\n * Implement a composable function that toggle state\n * Make the function work fine\n*/\nfunction useToggle() {\n\n}\n\nconst [state, toggle] = useToggle(false)\n\n</script>\n\n<template>\n  <p>State: {{ state ? 'ON' : 'OFF' }}</p>\n  <p @click=\"toggle\">\n    Toggle state\n  </p>\n</template>\n\n```",
          "zh-CN": "这个挑战开始,我们将尝试编写可组合函数，让我们从`useToggle`开始 👇:\n\n```vue\n<script setup lang='ts'>\n\n/**\n * 实现一个切换状态的可组合函数\n * 确保该功能正常工作\n*/\nfunction useToggle() {\n\n}\n\nconst [state, toggle] = useToggle(false)\n\n</script>\n\n<template>\n  <p>State: {{ state ? 'ON' : 'OFF' }}</p>\n  <p @click=\"toggle\">\n    Toggle state\n  </p>\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "useToggle",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "Composable Function"
          },
          "zh-CN": {
            "title": "切换器",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "16-until",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5pbXBvcnQgeyByZWYgfSBmcm9tIFwidnVlXCJcblxuY29uc3QgY291bnQgPSByZWYoMClcblxuLyoqXG4gKiBJbXBsZW1lbnQgdGhlIHVudGlsIGZ1bmN0aW9uXG4qL1xuXG5mdW5jdGlvbiB1bnRpbChpbml0aWFsKSB7XG4gIGZ1bmN0aW9uIHRvQmUodmFsdWUpIHtcblxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICB0b0JlLFxuICB9XG59XG5cbmFzeW5jIGZ1bmN0aW9uIGluY3JlYXNlKCkge1xuICBjb3VudC52YWx1ZSA9IDBcbiAgc2V0SW50ZXJ2YWwoKCkgPT4ge1xuICAgIGNvdW50LnZhbHVlKytcbiAgfSwgMTAwMClcbiAgYXdhaXQgdW50aWwoY291bnQpLnRvQmUoMylcbiAgY29uc29sZS5sb2coY291bnQudmFsdWUgPT09IDMpIC8vIE1ha2Ugc3VyZSB0aGUgb3V0cHV0IHRvIGJlIHRydWVcbn1cblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPHAgQGNsaWNrPVwiaW5jcmVhc2VcIj5cbiAgICBJbmNyZWFzZVxuICA8L3A+XG48L3RlbXBsYXRlPlxuIn0=",
        "no": 16,
        "readme": {
          "en": "We always need to rely on the asynchronous return result to do something, and the `until` function is so useful in this case, Can you do it? Let's try it 👇:\n\n\n```vue\n<script setup lang='ts'>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\n/**\n * Implement the until function\n*/\n\nfunction until(initial) {\n  function toBe(value) {\n\n  }\n\n  return {\n    toBe,\n  }\n}\n\nasync function increase() {\n  count.value = 0\n  setInterval(() => {\n    count.value++\n  }, 1000)\n  await until(count).toBe(3)\n  console.log(count.value === 3) // Make sure the output to be true\n}\n\n</script>\n\n```",
          "zh-CN": "有些时候，我们需要依赖于异步的返回结果做一些后续处理，`until`函数在这种场景下非常有用，你能实现它吗 ? 让我们来试试吧 👇:\n\n\n```vue\n<script setup lang='ts'>\nimport { ref } from \"vue\"\n\nconst count = ref(0)\n\n/**\n * 实现`until`函数\n*/\n\nfunction until(initial) {\n  function toBe(value) {\n\n  }\n\n  return {\n    toBe,\n  }\n}\n\nasync function increase() {\n  count.value = 0\n  setInterval(() => {\n    count.value++\n  }, 1000)\n  await until(count).toBe(3)\n  console.log(count.value === 3) // 确保输出为true\n}\n\n</script>\n\n```"
        },
        "info": {
          "en": {
            "title": "until",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "Utility Function"
          },
          "zh-CN": {
            "title": "until",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "17-useCounter",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmludGVyZmFjZSBVc2VDb3VudGVyT3B0aW9ucyB7XG4gIG1pbj86IG51bWJlclxuICBtYXg/OiBudW1iZXJcbn1cblxuLyoqXG4gKiBJbXBsZW1lbnQgdGhlIGNvbXBvc2FibGUgZnVuY3Rpb25cbiAqIE1ha2UgdGhlIGZ1bmN0aW9uIHdvcmsgZmluZVxuKi9cbmZ1bmN0aW9uIHVzZUNvdW50ZXIoaW5pdGlhbFZhbHVlID0gMCwgb3B0aW9uczogVXNlQ291bnRlck9wdGlvbnMgPSB7fSkge1xuXG59XG5cbmNvbnN0IHsgY291bnQsIGluYywgZGVjLCByZXNldCB9ID0gdXNlQ291bnRlcigwLCB7IG1pbjogMCwgbWF4OiAxMCB9KVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8cD5Db3VudDoge3sgY291bnQgfX08L3A+XG4gIDxidXR0b24gQGNsaWNrPVwiaW5jXCI+XG4gICAgaW5jXG4gIDwvYnV0dG9uPlxuICA8YnV0dG9uIEBjbGljaz1cImRlY1wiPlxuICAgIGRlY1xuICA8L2J1dHRvbj5cbiAgPGJ1dHRvbiBAY2xpY2s9XCJyZXNldFwiPlxuICAgIHJlc2V0XG4gIDwvYnV0dG9uPlxuPC90ZW1wbGF0ZT5cbiJ9",
        "no": 17,
        "readme": {
          "en": "For this challenge, we're going to implement a counter. 👇: \n\n\n```vue\n<script setup lang='ts'>\n\ninterface UseCounterOptions {\n  min?: number\n  max?: number\n}\n\n/**\n * Implement the composable function\n * 1. inc (+)\n * 2. dec (-)\n * 3. reset \n * 4. min & max opotion support\n * Make the function work fine\n*/\nfunction useCounter(initialValue = 0, options: UseCounterOptions = {}) {\n\n}\n\nconst { count, inc, dec, reset } = useCounter(0, { min: 0, max: 10 })\n\n</script>\n\n```",
          "zh-CN": "在这个挑战中，我们将实现一个计数器。 👇: \n\n\n```vue\n<script setup lang='ts'>\n\ninterface UseCounterOptions {\n  min?: number\n  max?: number\n}\n\n/**\n * 实现计数器函数,确保功能正常工作\n * 1. 加 (+)\n * 2. 减 (-)\n * 3. 重置 \n * 4. 最小值 & 最大值 选项支持\n*/\nfunction useCounter(initialValue = 0, options: UseCounterOptions = {}) {\n\n}\n\nconst { count, inc, dec, reset } = useCounter(0, { min: 0, max: 10 })\n\n</script>\n\n```"
        },
        "info": {
          "en": {
            "title": "useCounter",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "Composable Function"
          },
          "zh-CN": {
            "title": "计数器",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "18-useLocalStorage",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG4vKipcbiAqIEltcGxlbWVudCB0aGUgY29tcG9zYWJsZSBmdW5jdGlvblxuICogTWFrZSB0aGUgZnVuY3Rpb24gd29yayBmaW5lXG4qL1xuZnVuY3Rpb24gdXNlTG9jYWxTdG9yYWdlKGtleTogc3RyaW5nLCBpbml0aWFsVmFsdWU6IGFueSkge1xuICBjb25zdCB2YWx1ZSA9IHJlZihpbml0aWFsVmFsdWUpXG5cbiAgcmV0dXJuIHZhbHVlXG59XG5cbmNvbnN0IGNvdW50ZXIgPSB1c2VMb2NhbFN0b3JhZ2UoXCJjb3VudGVyXCIsIDApXG5cbi8vIFdlIGNhbiBnZXQgbG9jYWxTdG9yYWdlIHZpYSB0cmlnZ2VyZWQgdGhlIGdldHRlcjpcbmNvbnNvbGUubG9nKGNvdW50ZXIudmFsdWUpXG5cbi8vIEFuZCBXZSBhbHNvIGNhbiBzZXQgbG9jYWxTdG9yYWdlIHZpYSB0cmlnZ2VyZWQgdGhlIHNldHRlcjpcblxuY291bnRlci52YWx1ZSA9IDFcblxuPC9zY3JpcHQ+XG4ifQ==",
        "no": 18,
        "readme": {
          "en": "We often need to use the `localStorage` API, A composable function will help us better use it, Let's go. 👇: \n\n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * Implement the composable function\n * Make the function work fine\n*/\nfunction useLocalStorage(key: string, initialValue: any) {\n  const value = ref(initialValue)\n\n  return value\n}\n\nconst counter = useLocalStorage(\"counter\", 0)\n\n// We can get localStorage via triggered the getter:\nconsole.log(counter.value)\n\n// And We also can set localStorage via triggered the setter:\n\ncounter.value = 1\n\n</script>\n\n```",
          "zh-CN": "我们经常需要使用`localStorage`API，一个好用的可组合函数封装将帮助我们更好地使用它，让我们开始吧 👇: \n\n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * 实现`useLocalStorage`函数\n*/\nfunction useLocalStorage(key: string, initialValue: any) {\n  const value = ref(initialValue)\n\n  return value\n}\n\nconst counter = useLocalStorage(\"counter\", 0)\n\n// 我们可以通过触发`counter`的`getter`来获取本地存储的值\nconsole.log(counter.value)\n\n// 同样地,我们也可以通过触发`counter`的`setter`来设置本地存储的值\n\ncounter.value = 1\n\n</script>\n\n```"
        },
        "info": {
          "en": {
            "title": "useLocalStorage",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "Composable Function"
          },
          "zh-CN": {
            "title": "实现本地存储函数",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "19-v-focus",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5pbXBvcnQgeyByZWYgfSBmcm9tIFwidnVlXCJcblxuY29uc3Qgc3RhdGUgPSByZWYoZmFsc2UpXG5cbi8qKlxuICogSW1wbGVtZW50IHRoZSBjdXN0b20gZGlyZWN0aXZlXG4gKiBNYWtlIHN1cmUgdGhlIGlucHV0IGVsZW1lbnQgd2lsbCBmb2N1cy9ibHVyIHdoZW4gdG9nZ2xlIGBzdGF0ZWAgYXV0b21hdGljYWxseVxuICpcbiovXG5cbmNvbnN0IFZGb2N1cyA9IHtcblxufVxuXG5zZXRJbnRlcnZhbCgoKSA9PiB7XG4gIHN0YXRlLnZhbHVlID0gIXN0YXRlLnZhbHVlXG59LCAyMDAwKVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8aW5wdXQgdi1mb2N1cz1cInN0YXRlXCIgdHlwZT1cInRleHRcIj5cbjwvdGVtcGxhdGU+XG4ifQ==",
        "no": 19,
        "readme": {
          "en": "For this challenge, we'll start write custom directive. Let's start with `v-focus` 👇: \n\n```vue\n<script setup lang='ts'>\nimport { ref } from \"vue\"\n\nconst state = ref(false)\n\n/**\n * Implement the custom directive\n * Make sure the input element will focus/blur when toggle `state` automatically\n *\n*/\n\nconst VFocus = {\n\n}\n\nsetInterval(() => {\n  state.value = !state.value\n}, 2000)\n\n</script>\n\n<template>\n  <input v-focus=\"state\" type=\"text\">\n</template>\n\n```",
          "zh-CN": "这个挑战开始，我们将尝试编写自定义指令，让我们从`v-focus`开始 👇:\n\n```vue\n<script setup lang='ts'>\nimport { ref } from \"vue\"\n\nconst state = ref(false)\n\n/**\n * 实现一个自定义指令,让元素获取焦点\n * 确保当切换`state`时,元素随着状态值获取/失去焦点\n *\n*/\nconst VFocus = {\n\n}\n\nsetInterval(() => {\n  state.value = !state.value\n}, 2000)\n\n</script>\n\n<template>\n  <input v-focus=\"state\" type=\"text\">\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "v-focus",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "Directives"
          },
          "zh-CN": {
            "title": "切换焦点指令",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "20-v-debounce-click",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbi8qKlxuICogSW1wbGVtZW50IHRoZSBjdXN0b20gZGlyZWN0aXZlXG4gKiBNYWtlIHN1cmUgdGhlIGBvbkNsaWNrYCBtZXRob2Qgb25seSB0cmlnZ2VyZWQgb25jZSB3aGVuIGNsaWNrZWQgbWFueSB0aW1lcyBxdWlja3lcbiAqIEFuZCB5b3UgbmVlZCB0byBzdXBwb3J0IHRoZSBkZWJvdW5jZSBkZWxheSB0aW1lIG9wdGlvbi4gZS5nIGB2LWRlYm91bmNlLWNsaWNrOm1zYFxuICpcbiovXG5cbmNvbnN0IFZEZWJvdW5jZUNsaWNrID0ge1xuXG59XG5cbmZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gIGNvbnNvbGUubG9nKFwiT25seSB0cmlnZ2VyZWQgb25jZSB3aGVuIGNsaWNrZWQgbWFueSB0aW1lcyBxdWlja3lcIilcbn1cblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGJ1dHRvbiB2LWRlYm91bmNlLWNsaWNrOjIwMD1cIm9uQ2xpY2tcIj5cbiAgICBDbGljayBvbiBpdCBtYW55IHRpbWVzIHF1aWNrbHlcbiAgPC9idXR0b24+XG48L3RlbXBsYXRlPlxuIn0=",
        "no": 20,
        "readme": {
          "en": "For this challenge, we're going to implement a debounced-click-directive, let's go 👇: \n\n```vue\n<script setup lang='ts'>\n\n/**\n * Implement the custom directive\n * Make sure the `onClick` method only triggered once when clicked many times quicky\n * And you need to support the debounce delay time option. e.g. `v-debounce-click:ms`\n *\n*/\n\nconst VDebounceClick = {\n\n}\n\nfunction onClick() {\n  console.log(\"Only triggered once when clicked many times quicky\")\n}\n\n</script>\n\n<template>\n  <button v-debounce-click:200=\"onClick\">\n    Click on it many times quickly\n  </button>\n</template>\n\n```",
          "zh-CN": "在这个挑战中，我们将尝试实现一个节流点击指令，让我们开始吧 👇:\n\n```vue\n<script setup lang='ts'>\n\n/**\n * 实现以下自定义指令\n * 确保在一定时间内当快速点击按钮多次时只触发一次点击事件\n * 你需要支持节流延迟时间选项, 用法如 `v-debounce-click:ms`\n *\n*/\n\nconst VDebounceClick = {\n\n}\n\nfunction onClick() {\n  console.log(\"Only triggered once when clicked many times quicky\")\n}\n\n</script>\n\n<template>\n  <button v-debounce-click:200=\"onClick\">\n    Click on it many times quickly\n  </button>\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "v-debounce-click",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "Directives"
          },
          "zh-CN": {
            "title": "节流点击指令",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "21-functional-component",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG4vKipcbiAqIEltcGxlbWVudCB0aGUgZnVuY3Rpb25hbCBjb21wb25lbnQgOlxuICogMS4gUmVuZGVyIGxpc3QgZWxlbWVudHMgKHVsL2xpKSB3aXRoIGxpc3QgZGF0YVxuICogMi4gQ2hhbmdlIHRoZSBsaXN0IGl0ZW0gdGV4dCBjb2xvciB0byBiZSByZWQgd2hlbiBjbGljayBpdC5cbiovXG5jb25zdCBMaXN0Q29tcG9uZW50ID0gKCkgPT4ge1xufVxuXG5jb25zdCBsaXN0ID0gW3tcbiAgbmFtZTogXCJKb2huXCIsXG59LCB7XG4gIG5hbWU6IFwiRG9lXCIsXG59LCB7XG4gIG5hbWU6IFwiU21pdGhcIixcbn1dXG5cbmNvbnN0IGFjdGl2ZUluZGV4ID0gcmVmKDApXG5cbmZ1bmN0aW9uIHRvZ2dsZShpbmRleDogbnVtYmVyKSB7XG4gIGFjdGl2ZUluZGV4LnZhbHVlID0gaW5kZXhcbn1cblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGxpc3QtY29tcG9uZW50XG4gICAgOmxpc3Q9XCJsaXN0XCJcbiAgICA6YWN0aXZlLWluZGV4PVwiYWN0aXZlSW5kZXhcIlxuICAgIEB0b2dnbGU9XCJ0b2dnbGVcIlxuICAvPlxuPC90ZW1wbGF0ZT5cbiJ9",
        "no": 21,
        "readme": {
          "en": "For this challenge, we're going to implement a functional component, let's go 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * Implement the functional component :\n * 1. Render list elements (ul/li) with list data\n * 2. Change the list item text color to be red when click it.\n*/\nconst ListComponent = () => {\n}\n\nconst list = [{\n  name: \"John\",\n}, {\n  name: \"Doe\",\n}, {\n  name: \"Smith\",\n}]\n\nconst activeIndex = ref(0)\n\nfunction toggle(index: number) {\n  activeIndex.value = index\n}\n\n</script>\n\n<template>\n  <list-component\n    :list=\"list\"\n    :active-index=\"activeIndex\"\n    @toggle=\"toggle\"\n  />\n</template>\n\n```",
          "zh-CN": "在这个挑战中，我们将尝试实现一个函数式组件，让我们开始吧 👇:\n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * 实现该函数式组件 :\n * 1. 使用`list`数据渲染列表元素 (ul/li)\n * 2. 当点击列表子元素时,将其文本颜色更改为红色\n*/\nconst ListComponent = () => {\n}\n\nconst list = [{\n  name: \"John\",\n}, {\n  name: \"Doe\",\n}, {\n  name: \"Smith\",\n}]\n\nconst activeIndex = ref(0)\n\nfunction toggle(index: number) {\n  activeIndex.value = index\n}\n\n</script>\n\n<template>\n  <list-component\n    :list=\"list\"\n    :active-index=\"activeIndex\"\n    @toggle=\"toggle\"\n  />\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "functional component",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "Components"
          },
          "zh-CN": {
            "title": "函数式组件",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "25-useMouse",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cblxuLy8gSW1wbGVtZW50IC4uLlxuZnVuY3Rpb24gdXNlRXZlbnRMaXN0ZW5lcih0YXJnZXQsIGV2ZW50LCBjYWxsYmFjaykge1xuXG59XG5cbi8vIEltcGxlbWVudCAuLi5cbmZ1bmN0aW9uIHVzZU1vdXNlKCkge1xuICB1c2VFdmVudExpc3RlbmVyKHdpbmRvdywgXCJtb3VzZW1vdmVcIiwgKCkgPT4ge30pXG59XG5jb25zdCB7IHgsIHkgfSA9IHVzZU1vdXNlKClcbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+TW91c2UgcG9zaXRpb24gaXMgYXQ6IHt7IHggfX0sIHt7IHkgfX08L3RlbXBsYXRlPlxuIn0=",
        "no": 25,
        "readme": {
          "en": "We should focus on Reusability when use `Vue.js`,Composables functions are a good way,let's go 👇: \n\n\n```vue\n<script setup lang=\"ts\">\n\n// Implement ...\nfunction useEventListener(target, event, callback) {\n\n}\n\n// Implement ...\nfunction useMouse() {\n  useEventListener(window, \"mousemove\", () => {})\n}\nconst { x, y } = useMouse()\n</script>\n\n<template>Mouse position is at: {{ x }}, {{ y }}</template>\n\n\n```",
          "zh-CN": "在使用`Vue.js`时，我们应该关注可复用性，可组合函数是一个很好的方式，让我们开始吧 👇: \n\n\n```vue\n<script setup lang=\"ts\">\n\n// Implement ...\nfunction useEventListener(target, event, callback) {\n\n}\n\n// Implement ...\nfunction useMouse() {\n  useEventListener(window, \"mousemove\", () => {})\n}\nconst { x, y } = useMouse()\n</script>\n\n<template>Mouse position is at: {{ x }}, {{ y }}</template>\n\n\n```"
        },
        "info": {
          "en": {
            "title": "useMouse",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "Composable Function"
          },
          "zh-CN": {
            "title": "鼠标坐标",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "27-global-css",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHRlbXBsYXRlPlxuICA8cD5IZWxsbyBWdWUuanM8L3A+XG48L3RlbXBsYXRlPlxuXG48c3R5bGUgc2NvcGVkPlxuXG5wIHtcbiAgZm9udC1zaXplOjIwcHg7XG4gIGNvbG9yOnJlZDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBsaW5lLWhlaWdodDogNTBweDtcbn1cblxuLyogTWFrZSBpdCB3b3JrcyAqL1xuYm9keSB7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgYmFja2dyb3VuZC1jb2xvcjogYnVybHl3b29kO1xufVxuPC9zdHlsZT5cbiJ9",
        "no": 27,
        "readme": {
          "en": "Sometimes, we want to set global CSS in the scoped component, how to solve it, let's go 👇: \n\n```css\n<template>\n  <p>Hello Vue.js</p>\n</template>\n\n<style scoped>\n\np {\n  font-size:20px;\n  color:red;\n  text-align: center;\n  line-height: 50px;\n}\n\n/* Make it works */\nbody {\n  width: 100vw;\n  height: 100vh;\n  background-color: burlywood;\n}\n</style>\n```",
          "zh-CN": "有些时候，我们想在具有CSS作用域的`Vue`单文件组件设置全局CSS样式， 该怎么设置呢 ? 让我们开始吧 👇: \n\n```css\n<template>\n  <p>Hello Vue.js</p>\n</template>\n\n<style scoped>\n\np {\n  font-size:20px;\n  color:red;\n  text-align: center;\n  line-height: 50px;\n}\n\n/* 使其工作 */\nbody {\n  width: 100vw;\n  height: 100vh;\n  background-color: burlywood;\n}\n</style>\n```"
        },
        "info": {
          "en": {
            "title": "Global CSS",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "CSS Features"
          },
          "zh-CN": {
            "title": "全局CSS",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "7-raw-api",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlYWN0aXZlLCBpc1JlYWN0aXZlIH0gZnJvbSBcInZ1ZVwiXG5cbmNvbnN0IHN0YXRlID0geyBjb3VudDogMSB9XG5jb25zdCByZWFjdGl2ZVN0YXRlID0gcmVhY3RpdmUoc3RhdGUpXG5cbi8qKlxuICogTW9kaWZ5IHRoZSBjb2RlIHNvIHRoYXQgbWFrZSB0aGUgb3V0cHV0IHRvIGJlIHRydWUuXG4qL1xuY29uc29sZS5sb2cocmVhY3RpdmVTdGF0ZSA9PT0gc3RhdGUpXG5cbi8qKlxuICogTW9kaWZ5IHRoZSBjb2RlIHNvIHRoYXQgbWFrZSB0aGUgb3V0cHV0IHRvIGJlIGZhbHNlLlxuKi9cbmNvbnN0IGluZm8gPSB7IGNvdW50OiAxIH1cbmNvbnN0IHJlYWN0aXZlSW5mbyA9IHJlYWN0aXZlKGluZm8pXG5cbmNvbnNvbGUubG9nKGlzUmVhY3RpdmUocmVhY3RpdmVJbmZvKSlcblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGRpdj5cbiAgICA8cD5cbiAgICAgIHt7IHJlYWN0aXZlU3RhdGUuY291bnQgfX1cbiAgICA8L3A+XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cbiJ9",
        "no": 7,
        "readme": {
          "en": "For this challenge, you'll use `Reactivity API: [xx]Raw` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { reactive, isReactive } from \"vue\"\n\nconst state = { count: 1 }\nconst reactiveState = reactive(state)\n\n/**\n * Modify the code so that make the output to be true.\n*/\nconsole.log(reactiveState === state)\n\n/**\n * Modify the code so that make the output to be false.\n*/\nconst info = { count: 1 }\nconst reactiveInfo = reactive(info)\n\nconsole.log(isReactive(reactiveInfo))\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ reactiveState.count }}\n    </p>\n  </div>\n</template>\n\n\n```",
          "zh-CN": "在这个挑战中，你将使用 `响应式 API: [xx]Raw` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { reactive, isReactive } from \"vue\"\n\nconst state = { count: 1 }\nconst reactiveState = reactive(state)\n\n/**\n * 修改以下代码使输出为true\n*/\nconsole.log(reactiveState === state)\n\n/**\n * 修改以下代码使输出为false\n*/\nconst info = { count: 1 }\nconst reactiveInfo = reactive(info)\n\nconsole.log(isReactive(reactiveInfo))\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ reactiveState.count }}\n    </p>\n  </div>\n</template>\n\n\n```"
        },
        "info": {
          "en": {
            "title": "Raw API",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "Reactivity:Advanced"
          },
          "zh-CN": {
            "title": "原始值 API",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "8-effect-scope",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPVwidHNcIj5cbmltcG9ydCB7IHJlZiwgY29tcHV0ZWQsIHdhdGNoLCB3YXRjaEVmZmVjdCB9IGZyb20gXCJ2dWVcIlxuXG5jb25zdCBjb3VudGVyID0gcmVmKDEpXG5jb25zdCBkb3VibGVkID0gY29tcHV0ZWQoKCkgPT4gY291bnRlci52YWx1ZSAqIDIpXG5cbi8vIHVzZSBgZWZmZWN0U2NvcGVgIEFQSSB0byBtYWtlIHRoZXNlIGVmZmVjdCBzdG9wIHRvZ2V0aGVyIGFmdGVyIHRyaWdnZXJlZCBvbmNlXG5cbndhdGNoKGRvdWJsZWQsICgpID0+IGNvbnNvbGUubG9nKGRvdWJsZWQudmFsdWUpKVxud2F0Y2hFZmZlY3QoKCkgPT4gY29uc29sZS5sb2coXCJDb3VudDogXCIsIGRvdWJsZWQudmFsdWUpKVxuXG5jb3VudGVyLnZhbHVlID0gMlxuXG5zZXRUaW1lb3V0KCgpID0+IHtcbiAgY291bnRlci52YWx1ZSA9IDRcbn0pXG5cbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDxkaXY+XG4gICAgPHA+XG4gICAgICB7eyBkb3VibGVkIH19XG4gICAgPC9wPlxuICA8L2Rpdj5cbjwvdGVtcGxhdGU+XG4ifQ==",
        "no": 8,
        "readme": {
          "en": "For this challenge, you'll use `Reactivity API: effectScope` to finish it. \nHere's what you need to implement 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, computed, watch, watchEffect } from \"vue\"\n\nconst counter = ref(1)\nconst doubled = computed(() => counter.value * 2)\n\n// use `effectScope` API to make these effect stop together after triggered once\n\nwatch(doubled, () => console.log(doubled.value))\nwatchEffect(() => console.log(\"Count: \", doubled.value))\n\ncounter.value = 2\n\nsetTimeout(() => {\n  counter.value = 4\n})\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ doubled }}\n    </p>\n  </div>\n</template>\n\n\n```",
          "zh-CN": "在这个挑战中，你将使用 `响应式 API: effectScope` 来完成它。\n以下是你要实现的内容 👇: \n\n```vue\n<script setup lang=\"ts\">\nimport { ref, computed, watch, watchEffect } from \"vue\"\n\nconst counter = ref(1)\nconst doubled = computed(() => counter.value * 2)\n\n// 使用 `effectScope` API 使这些Effect效果在触发一次后停止\n\nwatch(doubled, () => console.log(doubled.value))\nwatchEffect(() => console.log(\"Count: \", doubled.value))\n\ncounter.value = 2\n\nsetTimeout(() => {\n  counter.value = 4\n})\n\n</script>\n\n<template>\n  <div>\n    <p>\n      {{ doubled }}\n    </p>\n  </div>\n</template>\n\n\n```"
        },
        "info": {
          "en": {
            "title": "effectScope API",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "medium",
            "tags": "Composition API,Reactivity:Advanced"
          },
          "zh-CN": {
            "title": "Effect作用域 API",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      }
    ],
    "hard": [
      {
        "path": "22-custom-element",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmltcG9ydCB7IG9uTW91bnRlZCB9IGZyb20gXCJ2dWVcIlxuXG4vKipcbiAqIEltcGxlbWVudCB0aGUgY29kZSB0byBjcmVhdGUgYSBjdXN0b20gZWxlbWVudC5cbiAqIE1ha2UgdGhlIG91dHB1dCBvZiBwYWdlIHNob3cgXCJIZWxsbyBWdWUuanNcIi5cbiovXG5jb25zdCBWdWVKcyA9IFwiPz8/XCJcblxub25Nb3VudGVkKCgpID0+IHtcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcHBcIikhLmlubmVySFRNTCA9IFwiPHZ1ZS1qcyBtZXNzYWdlPVxcXCJIZWxsbyBWdWUuanNcXFwiPjwvdnVlLWpzPlwiXG59KVxuXG48L3NjcmlwdD5cblxuPHRlbXBsYXRlPlxuICA8ZGl2IGlkPVwiYXBwXCI+PC9kaXY+XG48L3RlbXBsYXRlPlxuIn0=",
        "no": 22,
        "readme": {
          "en": "Have you heard about the `Web Components` ? \n\nVue has excellent support for both consuming and creating custom elements. \n\nFor this challenge,you can try it out,let's go 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { onMounted } from \"vue\"\n\n/**\n * Implement the code to create a custom element.\n * Make the output of page show \"Hello Vue.js\".\n*/\nconst VueJs = \"???\"\n\nonMounted(() => {\n  document.getElementById(\"app\")!.innerHTML = \"<vue-js message=\\\"Hello Vue.js\\\"></vue-js>\"\n})\n\n</script>\n\n<template>\n  <div id=\"app\"></div>\n</template>\n\n```",
          "zh-CN": "你听说过 `Web Components` 吗 ? \n\nVue 能很好地解析和创建 `Web Components` 。\n\n在这个挑战中，我们将尝试了解它，让我们开始吧 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { onMounted } from \"vue\"\n\n/**\n * 实现以下代码创建一个自定义元素.\n * 确保页面输出 \"Hello Vue.js\".\n*/\nconst VueJs = \"???\"\n\nonMounted(() => {\n  document.getElementById(\"app\")!.innerHTML = \"<vue-js message=\\\"Hello Vue.js\\\"></vue-js>\"\n})\n\n</script>\n\n<template>\n  <div id=\"app\"></div>\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "custom element",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "hard",
            "tags": "Web Components"
          },
          "zh-CN": {
            "title": "自定义元素",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "23-custom-ref",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cD5cbmltcG9ydCB7IHdhdGNoIH0gZnJvbSBcInZ1ZVwiXG5cbi8qKlxuICogSW1wbGVtZW50IHRoZSBmdW5jdGlvblxuKi9cbmZ1bmN0aW9uIHVzZURlYm91bmNlZFJlZih2YWx1ZSwgZGVsYXkgPSAyMDApIHtcblxufVxuY29uc3QgdGV4dCA9IHVzZURlYm91bmNlZFJlZihcImhlbGxvXCIpXG5cbi8qKlxuICogTWFrZSBzdXJlIHRoZSBjYWxsYmFjayBvbmx5IHRyaWdnZXJlZCBvbmNlIHdoZW4gZW50ZXIgbXVsdGlwbGUgdGltZXMgaW4gYSBjZXJ0YWluIHRpbWVvdXRcbiovXG53YXRjaCh0ZXh0LCAodmFsdWUpID0+IHtcbiAgY29uc29sZS5sb2codmFsdWUpXG59KVxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPGlucHV0IHYtbW9kZWw9XCJ0ZXh0XCIgLz5cbjwvdGVtcGxhdGU+XG4ifQ==",
        "no": 23,
        "readme": {
          "en": "The `debounce function` is so useful in the input box manipulation scenarios.\n\nA `debounced ref` is even more flexible in `Vue.js`, let's go 👇: \n\n```vue\n<script setup>\nimport { watch } from \"vue\"\n\n/**\n * Implement the function\n*/\nfunction useDebouncedRef(value, delay = 200) {\n\n}\nconst text = useDebouncedRef(\"hello\")\n\n/**\n * Make sure the callback only triggered once when enter multiple times in a certain timeout\n*/\nwatch(text, (value) => {\n  console.log(value)\n})\n</script>\n\n<template>\n  <input v-model=\"text\" />\n</template>\n\n```",
          "zh-CN": "防抖函数在输入框操作场景中非常有用。\n\n一个 防抖的`ref`在`Vue.js`更加灵活，让我们开始吧 👇: \n\n```vue\n<script setup>\nimport { watch } from \"vue\"\n\n/**\n * 补全以下函数来实现防抖ref :\n*/\nfunction useDebouncedRef(value, delay = 200) {\n\n}\nconst text = useDebouncedRef(\"hello\")\n\n/**\n * 确保在输入框快速输入时, 只触发一次回调。\n*/\nwatch(text, (value) => {\n  console.log(value)\n})\n</script>\n\n<template>\n  <input v-model=\"text\" />\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "custom ref",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "hard",
            "tags": "Composition API,Reactivity:Advanced"
          },
          "zh-CN": {
            "title": "自定义ref",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "24-v-active-style",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG4vKipcbiAqIEltcGxlbWVudCB0aGUgY3VzdG9tIGRpcmVjdGl2ZVxuICogTWFrZSBzdXJlIHRoZSBsaXN0IGl0ZW0gdGV4dCBjb2xvciBjaGFuZ2UgdG8gYmUgcmVkIHdoZW4gdG9nZ2xlIHRoZSB0YWJcbiAqXG4qL1xuY29uc3QgVkFjdGl2ZVN0eWxlID0ge1xuXG59XG5cbmNvbnN0IGxpc3QgPSBbMSwgMiwgMywgNCwgNSwgNiwgNywgOF1cbmNvbnN0IGFjdGl2ZVRhYiA9IHJlZigwKVxuZnVuY3Rpb24gdG9nZ2xlVGFiKGluZGV4OiBudW1iZXIpIHtcbiAgYWN0aXZlVGFiLnZhbHVlID0gaW5kZXhcbn1cblxuPC9zY3JpcHQ+XG5cbjx0ZW1wbGF0ZT5cbiAgPHVsPlxuICAgIDxsaVxuICAgICAgdi1mb3I9XCIoaXRlbSxpbmRleCkgaW4gbGlzdFwiXG4gICAgICA6a2V5PVwiaW5kZXhcIlxuICAgICAgdi1hY3RpdmUtc3R5bGU9XCJbeydjb2xvcic6J3JlZCd9LCgpID0+IGFjdGl2ZVRhYiA9PT0gaW5kZXhdXCJcbiAgICAgIEBjbGljaz1cInRvZ2dsZVRhYihpbmRleClcIlxuICAgID5cbiAgICAgIHt7IGl0ZW0gfX1cbiAgICA8L2xpPlxuICA8L3VsPlxuPC90ZW1wbGF0ZT5cbiJ9",
        "no": 24,
        "readme": {
          "en": "For this challenge, we're going to implement a active-style-directive, let's go 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * Implement the custom directive\n * Make sure the list item text color change to be red when toggle the tab\n *\n*/\nconst VActiveStyle = {\n\n}\n\nconst list = [1, 2, 3, 4, 5, 6, 7, 8]\nconst activeTab = ref(0)\nfunction toggleTab(index: number) {\n  activeTab.value = index\n}\n\n</script>\n\n<template>\n  <ul>\n    <li\n      v-for=\"(item,index) in list\"\n      :key=\"index\"\n      v-active-style=\"[{'color':'red'},() => activeTab === index]\"\n      @click=\"toggleTab(index)\"\n    >\n      {{ item }}\n    </li>\n  </ul>\n</template>\n\n```",
          "zh-CN": "在这个挑战中，我们将实现一个\"激活的样式\"指令，让我们开始吧 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * 实现该指令 :\n * 当切换该选项卡时，列表项文本颜色变为红色\n * \n*/\nconst VActiveStyle = {\n\n}\n\nconst list = [1, 2, 3, 4, 5, 6, 7, 8]\nconst activeTab = ref(0)\nfunction toggleTab(index: number) {\n  activeTab.value = index\n}\n\n</script>\n\n<template>\n  <ul>\n    <li\n      v-for=\"(item,index) in list\"\n      :key=\"index\"\n      v-active-style=\"[{'color':'red'},() => activeTab === index]\"\n      @click=\"toggleTab(index)\"\n    >\n      {{ item }}\n    </li>\n  </ul>\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "v-active-style",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "hard",
            "tags": "Directives"
          },
          "zh-CN": {
            "title": "激活的样式-指令",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      },
      {
        "path": "26-v-model",
        "quizLink": "https://sfc.vuejs.org/#eyJBcHAudnVlIjoiPHNjcmlwdCBzZXR1cCBsYW5nPSd0cyc+XG5cbmltcG9ydCB7IHJlZiB9IGZyb20gXCJ2dWVcIlxuXG4vKipcbiAqIEltcGxlbWVudCB0aGUgY3VzdG9tIGRpcmVjdGl2ZVxuICogQ3JlYXRlIGEgdHdvLXdheSBiaW5kaW5nIG9uIGEgZm9ybSBpbnB1dCBlbGVtZW50XG4gKlxuKi9cbmNvbnN0IFZPaE1vZGVsID0ge1xuXG59XG5cbmNvbnN0IHZhbHVlID0gcmVmKFwiSGVsbG8gVnVlLmpzXCIpXG5cbjwvc2NyaXB0PlxuXG48dGVtcGxhdGU+XG4gIDxpbnB1dCB2LW9oLW1vZGVsPVwidmFsdWVcIiB0eXBlPVwidGV4dFwiIC8+XG48L3RlbXBsYXRlPlxuIn0=",
        "no": 26,
        "readme": {
          "en": "For this challenge, we're going to implement a simple `v-model` directive, let's go 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * Implement the custom directive\n * Create a two-way binding on a form input element\n *\n*/\nconst VOhModel = {\n\n}\n\nconst value = ref(\"Hello Vue.js\")\n\n</script>\n\n<template>\n  <input v-oh-model=\"value\" type=\"text\" />\n</template>\n\n```",
          "zh-CN": "在这个挑战中，我们将尝试实现一个简单的`v-model`指令，让我们开始吧 👇: \n\n```vue\n<script setup lang='ts'>\n\nimport { ref } from \"vue\"\n\n/**\n * 实现以下自定义指令\n * 在表单输入元素和数据间创建双向绑定\n *\n*/\nconst VOhModel = {\n\n}\n\nconst value = ref(\"Hello Vue.js\")\n\n</script>\n\n<template>\n  <input v-oh-model=\"value\" type=\"text\" />\n</template>\n\n```"
        },
        "info": {
          "en": {
            "title": "v-model",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            },
            "difficulty": "hard",
            "tags": "Directives"
          },
          "zh-CN": {
            "title": "实现简易版`v-model`指令",
            "author": {
              "name": "webfansplz",
              "github": "webfansplz"
            }
          }
        }
      }
    ]
  }
}
